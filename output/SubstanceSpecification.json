{"paths": {"/SubstanceSpecification": {"post": {"tags": ["SubstanceSpecification"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SubstanceSpecification"}, "examples": {"substancespecification-example.json": {"value": {"resourceType": "SubstanceSpecification", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example</p></div>"}, "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["SubstanceSpecification"], "parameters": [{"name": "code", "in": "query", "schema": {"type": "string"}, "description": "The specific code"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SubstanceSpecification"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/SubstanceSpecification/{id}/_history": {"get": {"tags": ["SubstanceSpecification"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/SubstanceSpecification/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["SubstanceSpecification"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SubstanceSpecification"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["SubstanceSpecification"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SubstanceSpecification"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["SubstanceSpecification"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/SubstanceSpecification/{id}/_history/{vid}": {"get": {"tags": ["SubstanceSpecification"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SubstanceSpecification"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "The detailed description of a substance, typically at a level beyond what is used for prescribing", "title": "FHIR R4 SubstanceSpecification Resource", "version": "unspecified"}, "tags": [{"name": "SubstanceSpecification"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"SubstanceSpecification": {"description": "The detailed description of a substance, typically at a level beyond what is used for prescribing", "type": "object", "properties": {"code": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.code"}, "description": ""}, "comment": {"type": "string", "description": "Textual comment about this record of a substance."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "description": {"type": "string", "description": "Textual description of the substance."}, "domain": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "If the substance applies to only human or veterinary use."}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Identifier by which this substance is known."}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "moiety": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.moiety"}, "description": ""}, "molecularWeight": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.structure.isotope.molecularWeight"}, "description": ""}, "name": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.name"}, "description": ""}, "nucleicAcid": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Data items specific to nucleic acids."}, "polymer": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Data items specific to polymers."}, "property": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.property"}, "description": ""}, "protein": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Data items specific to proteins."}, "referenceInformation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "General information detailing this substance."}, "relationship": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.relationship"}, "description": ""}, "source": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Supporting literature."}, "sourceMaterial": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Material or taxonomic/anatomical source for the substance."}, "status": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Status of substance within the catalogue e.g. approved."}, "structure": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SubstanceSpecification.structure"}], "description": ""}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "High level categorization, e.g. polymer or nucleic acid."}}, "required": ["id"]}, "SubstanceSpecification.code": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The specific code"}, "comment": {"type": "string", "description": "Any comment can be provided in this field, if necessary"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "source": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Supporting literature"}, "status": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Status of the code assignment"}, "statusDate": {"type": "string", "description": "The date at which the code status is changed as part of the terminology maintenance"}}, "required": ["id"]}, "SubstanceSpecification.moiety": {"description": "", "type": "object", "properties": {"amount[x]": {"type": "string", "description": "Quantitative value for this moiety"}, "amountQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "amountString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Identifier by which this moiety substance is known"}, "molecularFormula": {"type": "string", "description": "Molecular formula"}, "name": {"type": "string", "description": "Textual name for this moiety substance"}, "opticalActivity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Optical activity type"}, "role": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Role that the moiety is playing"}, "stereochemistry": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Stereochemistry type"}}, "required": ["id"]}, "SubstanceSpecification.name": {"description": "", "type": "object", "properties": {"domain": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "jurisdiction": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "The jurisdiction where this name applies"}, "language": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Language of the name"}, "name": {"type": "string", "description": "The actual name"}, "official": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.name.official"}, "description": "Details of the official nature of this name"}, "preferred": {"type": "boolean", "description": "If this is the preferred name for this substance"}, "source": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Supporting literature"}, "status": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The status of the name"}, "synonym": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.name"}, "description": "A synonym of this name"}, "translation": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.name"}, "description": "A translation for this name"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Name type"}}, "required": ["id", "name"]}, "SubstanceSpecification.name.official": {"description": "", "type": "object", "properties": {"authority": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Which authority uses this official name"}, "date": {"type": "string", "description": "Date of official name change"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "status": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The status of the official name"}}, "required": ["id"]}, "SubstanceSpecification.property": {"description": "", "type": "object", "properties": {"amount[x]": {"type": "string", "description": "Quantitative value for this property"}, "amountQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "amountString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "category": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "A category for this property, e.g. Physical, Chemical, Enzymatic"}, "code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Property type e.g. viscosity, pH, isoelectric point"}, "definingSubstance[x]": {"type": "string", "description": "A substance upon which a defining property depends (e.g. for solubility: in water, in alcohol)"}, "definingSubstanceCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "definingSubstanceReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "parameters": {"type": "string", "description": "Parameters that were used in the measurement of a property (e.g. for viscosity: measured at 20C with a pH of 7.1)"}}, "required": ["id"]}, "SubstanceSpecification.relationship": {"description": "", "type": "object", "properties": {"amount[x]": {"type": "string", "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other"}, "amountQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "amountRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "amountRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "amountRatioLowLimit": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": "For use when the numeric"}, "amountString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "amountType": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "An operator for the amount, for example \"average\", \"approximately\", \"less than\""}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "isDefining": {"type": "boolean", "description": "For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships"}, "relationship": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "For example \"salt to parent\", \"active moiety\", \"starting material\""}, "source": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Supporting literature"}, "substance[x]": {"type": "string", "description": "A pointer to another substance, as a resource or just a representational code"}, "substanceCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "substanceReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}}, "required": ["id"]}, "SubstanceSpecification.structure": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "isotope": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.structure.isotope"}, "description": "Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio"}, "molecularFormula": {"type": "string", "description": "Molecular formula"}, "molecularFormulaByMoiety": {"type": "string", "description": "Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical, each moiety separated by a dot"}, "molecularWeight": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SubstanceSpecification.structure.isotope.molecularWeight"}], "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids)"}, "opticalActivity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Optical activity type"}, "representation": {"type": "array", "items": {"$ref": "#/components/schemas/SubstanceSpecification.structure.representation"}, "description": "Molecular structural representation"}, "source": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Supporting literature"}, "stereochemistry": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Stereochemistry type"}}, "required": ["id"]}, "SubstanceSpecification.structure.isotope": {"description": "", "type": "object", "properties": {"halfLife": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "Half life - for a non-natural nuclide"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Substance identifier for each non-natural or radioisotope"}, "molecularWeight": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SubstanceSpecification.structure.isotope.molecularWeight"}], "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids)"}, "name": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Substance name for each non-natural or radioisotope"}, "substitution": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The type of isotopic substitution present in a single substance"}}, "required": ["id"]}, "SubstanceSpecification.structure.isotope.molecularWeight": {"description": "", "type": "object", "properties": {"amount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "method": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The method by which the molecular weight was determined"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of molecular weight such as exact, average (also known as. number average), weight average"}}, "required": ["id"]}, "SubstanceSpecification.structure.representation": {"description": "", "type": "object", "properties": {"attachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": "An attached file with the structural representation"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "representation": {"type": "string", "description": "The structural representation as text string in a format e.g. InChI, SMILES, MOLFILE, CDX"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The type of structure (e.g. Full, Partial, Representative)"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Quantity": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "A computer processable form of the unit in some unit representation system."}, "comparator": {"type": "string", "description": "< | <= | >= | > - how to understand the value"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "system": {"type": "string", "description": "The identification of the system that provides the coded form of the unit."}, "unit": {"type": "string", "description": "A human-readable form of the unit."}, "value": {"type": "number", "description": "Numerical value (with implicit precision)"}}, "required": ["id"]}, "Range": {"description": "", "type": "object", "properties": {"high": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The high limit. The boundary is inclusive."}, "id": {"type": "string", "description": ""}, "low": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The low limit. The boundary is inclusive."}}, "required": ["id"]}, "Ratio": {"description": "", "type": "object", "properties": {"denominator": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The value of the denominator."}, "id": {"type": "string", "description": ""}, "numerator": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The value of the numerator."}}, "required": ["id"]}, "Attachment": {"description": "", "type": "object", "properties": {"contentType": {"type": "string", "description": "Mime type of the content, with charset etc."}, "creation": {"type": "string", "description": "The date that the attachment was first created."}, "data": {"type": "string", "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."}, "hash": {"type": "string", "description": "The calculated hash of the data using SHA-1. Represented using base64."}, "id": {"type": "string", "description": ""}, "language": {"type": "string", "description": "The human language of the content. The value can be any valid value according to BCP 47."}, "size": {"type": "number", "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."}, "title": {"type": "string", "description": "A label or set of text to display in place of the data."}, "url": {"type": "string", "description": "A location where the data can be accessed."}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}