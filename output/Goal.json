{"paths": {"/Goal/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["Goal"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Goal"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["Goal"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Goal"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["Goal"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Goal": {"post": {"tags": ["Goal"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Goal"}, "examples": {"goal-example-stop-smoking.json": {"value": {"resourceType": "Goal", "id": "stop-smoking", "text": {"status": "additional", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<p> A simple care goal for a patient to stop smoking.</p>\n\t\t</div>"}, "identifier": [{"value": "123"}], "lifecycleStatus": "completed", "achievementStatus": {"coding": [{"system": "http://terminology.hl7.org/CodeSystem/goal-achievement", "code": "achieved", "display": "Achieved"}], "text": "Achieved"}, "description": {"text": "Stop smoking"}, "subject": {"reference": "Patient/example", "display": "Peter James Chalmers"}, "startDate": "2015-04-05", "outcomeCode": [{"coding": [{"system": "http://snomed.info/sct", "code": "8517006", "display": "Ex-smoker (finding)"}], "text": "Former smoker"}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}, "goal-example.json": {"value": {"resourceType": "Goal", "id": "example", "text": {"status": "additional", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<p> A simple care goal for a patient to lose weight due to obesity.</p>\n\t\t</div>"}, "identifier": [{"value": "123"}], "lifecycleStatus": "on-hold", "category": [{"coding": [{"system": "http://terminology.hl7.org/CodeSystem/goal-category", "code": "dietary"}]}], "priority": {"coding": [{"system": "http://terminology.hl7.org/CodeSystem/goal-priority", "code": "high-priority", "display": "High Priority"}], "text": "high"}, "description": {"text": "Target weight is 160 to 180 lbs."}, "subject": {"reference": "Patient/example", "display": "Peter James Chalmers"}, "startDate": "2015-04-05", "target": [{"measure": {"coding": [{"system": "http://loinc.org", "code": "3141-9", "display": "Weight Measured"}]}, "detailRange": {"low": {"value": 160, "unit": "lbs", "system": "http://unitsofmeasure.org", "code": "[lb_av]"}, "high": {"value": 180, "unit": "lbs", "system": "http://unitsofmeasure.org", "code": "[lb_av]"}}, "dueDate": "2016-04-05"}], "statusDate": "2016-02-14", "statusReason": "Patient wants to defer weight loss until after honeymoon.", "expressedBy": {"reference": "Patient/example", "display": "Peter James Chalmers"}, "addresses": [{"display": "obesity condition"}], "outcomeReference": [{"reference": "Observation/example", "display": "Body Weight Measured"}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["Goal"], "parameters": [{"name": "achievement-status", "in": "query", "schema": {"type": "string"}, "description": "in-progress | improving | worsening | no-change | achieved | sustaining | not-achieved | no-progress | not-attainable"}, {"name": "category", "in": "query", "schema": {"type": "string"}, "description": "E.g. Treatment, dietary, behavioral, etc."}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "External Ids for this goal"}, {"name": "lifecycle-status", "in": "query", "schema": {"type": "string"}, "description": "proposed | planned | accepted | active | on-hold | completed | cancelled | entered-in-error | rejected"}, {"name": "patient", "in": "query", "schema": {"type": "string"}, "description": "Who this goal is intended for"}, {"name": "start-date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "When goal pursuit begins"}, {"name": "subject", "in": "query", "schema": {"type": "string"}, "description": "Who this goal is intended for"}, {"name": "target-date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "Reach goal on or before"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Goal"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Goal/{id}/_history": {"get": {"tags": ["Goal"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Goal"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Goal/{id}/_history/{vid}": {"get": {"tags": ["Goal"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Goal"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Describes the intended objective(s) for a patient, group or organization", "title": "FHIR R4 Goal Resource", "version": "unspecified"}, "tags": [{"name": "Goal"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"Goal": {"description": "Describes the intended objective(s) for a patient, group or organization", "type": "object", "properties": {"achievementStatus": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Describes the progression, or lack thereof, towards the goal against the target."}, "addresses": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Issues addressed by this goal"}, "category": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Indicates a category the goal falls within."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "description": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Code or text describing goal"}, "expressedBy": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Indicates whose goal this is - patient goal, practitioner goal, etc."}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "External Ids for this goal"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "lifecycleStatus": {"type": "string", "description": "The state of the goal throughout its lifecycle."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "note": {"type": "array", "items": {"$ref": "#/components/schemas/Annotation"}, "description": "Any comments related to the goal."}, "outcomeCode": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Identifies the change (or lack of change) at the point when the status of the goal is assessed."}, "outcomeReference": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Details of what's changed (or not changed)."}, "priority": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Identifies the mutually agreed level of importance associated with reaching/sustaining the goal."}, "start[x]": {"type": "string", "description": "The date or event after which the goal should begin being pursued."}, "startCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "startDate": {"type": "string", "description": ""}, "statusDate": {"type": "string", "description": "When goal status took effect"}, "statusReason": {"type": "string", "description": "Captures the reason for the current status."}, "subject": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Identifies the patient, group or organization for whom the goal is being established."}, "target": {"type": "array", "items": {"$ref": "#/components/schemas/Goal.target"}, "description": ""}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}}, "required": ["id", "description", "lifecycleStatus", "subject"]}, "Goal.target": {"description": "", "type": "object", "properties": {"detail[x]": {"type": "string", "description": "The target value to be achieved"}, "detailBoolean": {"type": "boolean", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "detailCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "detailInteger": {"type": "number", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "detailQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "detailRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "detailRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "detailString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "due[x]": {"type": "string", "description": "Reach goal on or before"}, "dueDate": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "dueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "measure": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The parameter whose value is being tracked"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Annotation": {"description": "", "type": "object", "properties": {"author[x]": {"type": "string", "description": "The individual responsible for making the annotation."}, "authorReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "authorString": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "The text of the annotation in markdown format."}, "time": {"type": "string", "description": "Indicates when this particular annotation was made."}}, "required": ["id", "text"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Quantity": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "A computer processable form of the unit in some unit representation system."}, "comparator": {"type": "string", "description": "< | <= | >= | > - how to understand the value"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "system": {"type": "string", "description": "The identification of the system that provides the coded form of the unit."}, "unit": {"type": "string", "description": "A human-readable form of the unit."}, "value": {"type": "number", "description": "Numerical value (with implicit precision)"}}, "required": ["id"]}, "Range": {"description": "", "type": "object", "properties": {"high": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The high limit. The boundary is inclusive."}, "id": {"type": "string", "description": ""}, "low": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The low limit. The boundary is inclusive."}}, "required": ["id"]}, "Ratio": {"description": "", "type": "object", "properties": {"denominator": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The value of the denominator."}, "id": {"type": "string", "description": ""}, "numerator": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The value of the numerator."}}, "required": ["id"]}, "Duration": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": ""}, "comparator": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": ""}, "unit": {"type": "string", "description": ""}, "value": {"type": "number", "description": ""}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}