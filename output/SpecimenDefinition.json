{"paths": {"/SpecimenDefinition/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["SpecimenDefinition"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SpecimenDefinition"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["SpecimenDefinition"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SpecimenDefinition"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["SpecimenDefinition"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/SpecimenDefinition": {"post": {"tags": ["SpecimenDefinition"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SpecimenDefinition"}, "examples": {"specimendefinition-example-serum-plasma.json": {"value": {"resourceType": "SpecimenDefinition", "id": "2364", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: 2364</p><p><b>typeCollected</b>: Venous blood specimen <span>(Details : {SNOMED CT code '122555007' = 'Venous blood specimen', given as 'Venous blood specimen'})</span></p><p><b>patientPreparation</b>: 12 hour fasting <span>(Details )</span>, At rest <span>(Details : {SNOMED CT code '263678003' = 'At rest', given as 'At rest'})</span></p><p><b>timeAspect</b>: preferrably morning time</p><blockquote><p><b>typeTested</b></p><p><b>type</b>: Serum specimen <span>(Details : {SNOMED CT code '119364003' = 'Serum specimen', given as 'Serum specimen'})</span></p><p><b>preference</b>: preferred</p><h3>Containers</h3><table><tr><td>-</td><td><b>Material</b></td><td><b>Type</b></td><td><b>Cap</b></td><td><b>MinimumVolume[x]</b></td></tr><tr><td>*</td><td>plastic <span>(Details : {SNOMED CT code '61088005' = 'Plastic', given as 'plastic'})</span></td><td>Evacuated blood collection tube, thrombin/clot activator/gel separator <span>(Details : {SNOMED CT code '702281005' = 'Evacuated blood collection tube, thrombin/clot activator/gel separator', given as 'Evacuated blood collection tube, thrombin/clot activator/gel separator'})</span></td><td>yellow cap <span>(Details : {urn:iso:std:iso:6710:2017 code 'yellow' = 'yellow', given as 'yellow cap'})</span></td><td>2 ml<span> (Details: UCUM code mL = 'mL')</span></td></tr></table><blockquote><p><b>handling</b></p><p><b>temperatureQualifier</b>: Ambient temperature <span>(Details )</span></p><p><b>temperatureRange</b>: 15-25 \u00b0C</p><p><b>maxDuration</b>: 60 minute<span> (Details: UCUM code min = 'min')</span></p></blockquote><blockquote><p><b>handling</b></p><p><b>temperatureQualifier</b>: Refrigerated temperature <span>(Details )</span></p><p><b>temperatureRange</b>: 2-8 \u00b0C</p><p><b>maxDuration</b>: 8 hour<span> (Details: UCUM code h = 'h')</span></p></blockquote></blockquote><blockquote><p><b>typeTested</b></p><p><b>type</b>: Plasma specimen <span>(Details : {SNOMED CT code '119361006' = 'Plasma specimen', given as 'Plasma specimen'})</span></p><p><b>preference</b>: alternate</p><h3>Containers</h3><table><tr><td>-</td><td><b>Material</b></td><td><b>Type</b></td><td><b>Cap</b></td><td><b>MinimumVolume[x]</b></td></tr><tr><td>*</td><td>glass <span>(Details : {SNOMED CT code '32039001' = 'Glass', given as 'glass'})</span></td><td>Evacuated blood collection tube with heparin lithium and gel separator <span>(Details : {SNOMED CT code '767390000' = 'Evacuated blood collection tube with heparin lithium and gel separator', given as 'Evacuated blood collection tube with heparin lithium and gel separator'})</span></td><td>green cap <span>(Details : {urn:iso:std:iso:6710:2017 code 'green' = 'green', given as 'green cap'})</span></td><td>2 ml<span> (Details: UCUM code mL = 'mL')</span></td></tr></table><p><b>rejectionCriterion</b>: insufficient specimen volume <span>(Details : {http://terminology.hl7.org/CodeSystem/rejection-criteria code 'insufficient' = 'insufficient specimen volume', given as 'insufficient specimen volume'})</span>, hemolized specimen <span>(Details : {http://terminology.hl7.org/CodeSystem/rejection-criteria code 'hemolized' = 'hemolized specimen', given as 'hemolized specimen'})</span></p><blockquote><p><b>handling</b></p><p><b>temperatureQualifier</b>: Ambient temperature <span>(Details )</span></p><p><b>temperatureRange</b>: 15-25 \u00b0C</p><p><b>maxDuration</b>: 60 minute<span> (Details: UCUM code min = 'min')</span></p></blockquote><blockquote><p><b>handling</b></p><p><b>temperatureQualifier</b>: Refrigerated temperature <span>(Details )</span></p><p><b>temperatureRange</b>: 2-8 \u00b0C</p><p><b>maxDuration</b>: 8 hour<span> (Details: UCUM code h = 'h')</span></p></blockquote></blockquote></div>"}, "typeCollected": {"coding": [{"system": "http://snomed.info/sct", "code": "122555007", "display": "Venous blood specimen"}]}, "patientPreparation": [{"text": "12 hour fasting"}, {"coding": [{"system": "http://snomed.info/sct", "code": "263678003", "display": "At rest"}]}], "timeAspect": "preferrably morning time", "typeTested": [{"type": {"coding": [{"system": "http://snomed.info/sct", "code": "119364003", "display": "Serum specimen"}]}, "preference": "preferred", "container": {"material": {"coding": [{"system": "http://snomed.info/sct", "code": "61088005", "display": "plastic"}]}, "type": {"coding": [{"system": "http://snomed.info/sct", "code": "702281005", "display": "Evacuated blood collection tube, thrombin/clot activator/gel separator"}]}, "cap": {"coding": [{"system": "urn:iso:std:iso:6710:2017", "code": "yellow", "display": "yellow cap"}]}, "minimumVolumeQuantity": {"value": 2, "unit": "ml", "system": "http://unitsofmeasure.org", "code": "mL"}}, "handling": [{"temperatureQualifier": {"text": "Ambient temperature"}, "temperatureRange": {"low": {"value": 15, "unit": "\u00b0C", "system": "http://unitsofmeasure.org", "code": "Cel"}, "high": {"value": 25, "unit": "\u00b0C", "system": "http://unitsofmeasure.org", "code": "Cel"}}, "maxDuration": {"value": 60, "unit": "minute", "system": "http://unitsofmeasure.org", "code": "min"}}, {"temperatureQualifier": {"text": "Refrigerated temperature"}, "temperatureRange": {"low": {"value": 2, "unit": "\u00b0C", "system": "http://unitsofmeasure.org", "code": "Cel"}, "high": {"value": 8, "unit": "\u00b0C", "system": "http://unitsofmeasure.org", "code": "Cel"}}, "maxDuration": {"value": 8, "unit": "hour", "system": "http://unitsofmeasure.org", "code": "h"}}]}, {"type": {"coding": [{"system": "http://snomed.info/sct", "code": "119361006", "display": "Plasma specimen"}]}, "preference": "alternate", "container": {"material": {"coding": [{"system": "http://snomed.info/sct", "code": "32039001", "display": "glass"}]}, "type": {"coding": [{"system": "http://snomed.info/sct", "code": "767390000", "display": "Evacuated blood collection tube with heparin lithium and gel separator"}]}, "cap": {"coding": [{"system": "urn:iso:std:iso:6710:2017", "code": "green", "display": "green cap"}]}, "minimumVolumeQuantity": {"value": 2, "unit": "ml", "system": "http://unitsofmeasure.org", "code": "mL"}}, "rejectionCriterion": [{"coding": [{"system": "http://terminology.hl7.org/CodeSystem/rejection-criteria", "code": "insufficient", "display": "insufficient specimen volume"}]}, {"coding": [{"system": "http://terminology.hl7.org/CodeSystem/rejection-criteria", "code": "hemolized", "display": "hemolized specimen"}]}], "handling": [{"temperatureQualifier": {"text": "Ambient temperature"}, "temperatureRange": {"low": {"value": 15, "unit": "\u00b0C", "system": "http://unitsofmeasure.org", "code": "Cel"}, "high": {"value": 25, "unit": "\u00b0C", "system": "http://unitsofmeasure.org", "code": "Cel"}}, "maxDuration": {"value": 60, "unit": "minute", "system": "http://unitsofmeasure.org", "code": "min"}}, {"temperatureQualifier": {"text": "Refrigerated temperature"}, "temperatureRange": {"low": {"value": 2, "unit": "\u00b0C", "system": "http://unitsofmeasure.org", "code": "Cel"}, "high": {"value": 8, "unit": "\u00b0C", "system": "http://unitsofmeasure.org", "code": "Cel"}}, "maxDuration": {"value": 8, "unit": "hour", "system": "http://unitsofmeasure.org", "code": "h"}}]}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["SpecimenDefinition"], "parameters": [{"name": "container", "in": "query", "schema": {"type": "string"}, "description": "The type of specimen conditioned in container expected by the lab"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "The unique identifier associated with the specimen"}, {"name": "type", "in": "query", "schema": {"type": "string"}, "description": "The type of collected specimen"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SpecimenDefinition"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/SpecimenDefinition/{id}/_history/{vid}": {"get": {"tags": ["SpecimenDefinition"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/SpecimenDefinition"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/SpecimenDefinition/{id}/_history": {"get": {"tags": ["SpecimenDefinition"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/SpecimenDefinition"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Kind of specimen", "title": "FHIR R4 SpecimenDefinition Resource", "version": "unspecified"}, "tags": [{"name": "SpecimenDefinition"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"SpecimenDefinition": {"description": "Kind of specimen", "type": "object", "properties": {"collection": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "The action to be performed for collecting the specimen."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "A business identifier associated with the kind of specimen."}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "patientPreparation": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Preparation of the patient for specimen collection."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "timeAspect": {"type": "string", "description": "Time aspect of specimen collection (duration or offset)."}, "typeCollected": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The kind of material to be collected."}, "typeTested": {"type": "array", "items": {"$ref": "#/components/schemas/SpecimenDefinition.typeTested"}, "description": ""}}, "required": ["id"]}, "SpecimenDefinition.typeTested": {"description": "", "type": "object", "properties": {"container": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SpecimenDefinition.typeTested.container"}], "description": "The specimen's container"}, "handling": {"type": "array", "items": {"$ref": "#/components/schemas/SpecimenDefinition.typeTested.handling"}, "description": "Specimen handling before testing"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "isDerived": {"type": "boolean", "description": "Primary or secondary specimen"}, "preference": {"type": "string", "description": "preferred | alternate"}, "rejectionCriterion": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Rejection criterion"}, "requirement": {"type": "string", "description": "Specimen requirements"}, "retentionTime": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": "Specimen retention time"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of intended specimen"}}, "required": ["id", "preference"]}, "SpecimenDefinition.typeTested.container": {"description": "", "type": "object", "properties": {"additive": {"type": "array", "items": {"$ref": "#/components/schemas/SpecimenDefinition.typeTested.container.additive"}, "description": "Additive associated with container"}, "cap": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Color of container cap"}, "capacity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "Container capacity"}, "description": {"type": "string", "description": "Container description"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "material": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Container material"}, "minimumVolume[x]": {"type": "string", "description": "Minimum volume"}, "minimumVolumeQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "minimumVolumeString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "preparation": {"type": "string", "description": "Specimen container preparation"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Kind of container associated with the kind of specimen"}}, "required": ["id"]}, "SpecimenDefinition.typeTested.container.additive": {"description": "", "type": "object", "properties": {"additive[x]": {"type": "string", "description": "Additive associated with container"}, "additiveCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "additiveReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}}, "required": ["id", "additive"]}, "SpecimenDefinition.typeTested.handling": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "instruction": {"type": "string", "description": "Preservation instruction"}, "maxDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": "Maximum preservation time"}, "temperatureQualifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Temperature qualifier"}, "temperatureRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": "Temperature range"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Duration": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": ""}, "comparator": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": ""}, "unit": {"type": "string", "description": ""}, "value": {"type": "number", "description": ""}}, "required": ["id"]}, "Quantity": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "A computer processable form of the unit in some unit representation system."}, "comparator": {"type": "string", "description": "< | <= | >= | > - how to understand the value"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "system": {"type": "string", "description": "The identification of the system that provides the coded form of the unit."}, "unit": {"type": "string", "description": "A human-readable form of the unit."}, "value": {"type": "number", "description": "Numerical value (with implicit precision)"}}, "required": ["id"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Range": {"description": "", "type": "object", "properties": {"high": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The high limit. The boundary is inclusive."}, "id": {"type": "string", "description": ""}, "low": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The low limit. The boundary is inclusive."}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}