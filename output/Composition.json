{"paths": {"/Composition/{id}/_history/{vid}": {"get": {"tags": ["Composition"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Composition"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Composition": {"post": {"tags": ["Composition"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Composition"}, "examples": {"composition-example-mixed.json": {"value": {"resourceType": "Composition", "id": "example-mixed", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example-mixed</p><p><b>status</b>: final</p><p><b>type</b>: Neonatal perinatal medicine Discharge summary <span>(Details : {LOINC code '78418-1' = 'Neonatal perinatal medicine Discharge summary', given as 'Neonatal perinatal medicine Discharge summary'})</span></p><p><b>category</b>: Report <span>(Details : {LOINC code 'LP173421-1' = 'Report', given as 'Report'})</span></p><p><b>date</b>: 30/10/2018 4:56:04 PM</p><p><b>author</b>: <a>Harold Hippocrates, MD</a></p><p><b>title</b>: Discharge Summary (Neonatal Service)</p><p><b>confidentiality</b>: N</p><h3>Attesters</h3><table><tr><td>-</td><td><b>Mode</b></td><td><b>Time</b></td><td><b>Party</b></td></tr><tr><td>*</td><td>legal</td><td>04/01/2012 9:10:14 AM</td><td><a>Harold Hippocrates, MD</a></td></tr></table><p><b>custodian</b>: <a>Good Health Clinic</a></p></div>"}, "status": "final", "type": {"coding": [{"system": "http://loinc.org", "code": "78418-1", "display": "Neonatal perinatal medicine Discharge summary"}]}, "category": [{"coding": [{"system": "http://loinc.org", "code": "LP173421-1", "display": "Report"}]}], "subject": {"reference": "Patient/newborn", "display": "Tahlia Smith"}, "date": "2018-10-30T16:56:04+11:00", "author": [{"reference": "Practitioner/xcda-author", "display": "Harold Hippocrates, MD"}], "title": "Discharge Summary (Neonatal Service)", "confidentiality": "N", "attester": [{"mode": "legal", "time": "2012-01-04T09:10:14Z", "party": {"reference": "Practitioner/xcda-author", "display": "Harold Hippocrates, MD"}}], "custodian": {"reference": "Organization/2.16.840.1.113883.19.5", "display": "Good Health Clinic"}, "section": [{"title": "Child's Details", "code": {"coding": [{"system": "http://acme.org/codes/SectionType", "code": "newborn", "display": "New Born Details"}]}, "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n        (snip)\n\t\t\t</div>"}}, {"title": "Mpther's Details", "code": {"coding": [{"system": "http://acme.org/codes/SectionType", "code": "mother", "display": "Mother's Details"}]}, "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\t\t(snip)\n\t\t\t</div>"}}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}, "composition-example.json": {"value": {"resourceType": "Composition", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<p>Consultation note for Henry Levin the 7th</p>\n\t\t\t<p>Managed by Good Health Clinic</p>\n\t\t</div>"}, "identifier": {"system": "http://healthintersections.com.au/test", "value": "1"}, "status": "final", "type": {"coding": [{"system": "http://loinc.org", "code": "11488-4", "display": "Consult note"}]}, "category": [{"coding": [{"system": "http://loinc.org", "code": "LP173421-1", "display": "Report"}]}], "subject": {"reference": "Patient/xcda", "display": "Henry Levin the 7th"}, "encounter": {"reference": "Encounter/xcda"}, "date": "2012-01-04T09:10:14Z", "author": [{"reference": "Practitioner/xcda-author", "display": "Harold Hippocrates, MD"}], "title": "Consultation Note", "confidentiality": "N", "attester": [{"mode": "legal", "time": "2012-01-04T09:10:14Z", "party": {"reference": "Practitioner/xcda-author", "display": "Harold Hippocrates, MD"}}], "custodian": {"reference": "Organization/2.16.840.1.113883.19.5", "display": "Good Health Clinic"}, "relatesTo": [{"code": "replaces", "targetReference": {"reference": "Composition/old-example"}}, {"code": "appends", "targetIdentifier": {"system": "http://example.org/fhir/NamingSystem/document-ids", "value": "ABC123"}}], "event": [{"code": [{"coding": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActCode", "code": "HEALTHREC", "display": "health record"}]}], "period": {"start": "2010-07-18", "end": "2012-11-12"}, "detail": [{"reference": "Observation/example"}]}], "section": [{"title": "History of present illness", "code": {"coding": [{"system": "http://loinc.org", "code": "11348-0", "display": "History of past illness Narrative"}]}, "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<b>Code</b>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<b>Date</b>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<b>Type</b>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<b>BodySite</b>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<b>Severity</b>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Stroke</td>\n\t\t\t\t\t\t<td>2010-07-18</td>\n\t\t\t\t\t\t<td>Diagnosis</td>\n\t\t\t\t\t\t<td/>\n\t\t\t\t\t\t<td/>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Burnt Ear</td>\n\t\t\t\t\t\t<td>2012-05-24</td>\n\t\t\t\t\t\t<td>Diagnosis</td>\n\t\t\t\t\t\t<td>Left Ear</td>\n\t\t\t\t\t\t<td/>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Asthma</td>\n\t\t\t\t\t\t<td>2012-11-12</td>\n\t\t\t\t\t\t<td>Finding</td>\n\t\t\t\t\t\t<td/>\n\t\t\t\t\t\t<td>Mild</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>"}, "mode": "snapshot", "orderedBy": {"coding": [{"system": "http://terminology.hl7.org/CodeSystem/list-order", "code": "event-date", "display": "Sorted by Event Date"}]}, "entry": [{"reference": "Condition/stroke"}, {"reference": "Condition/example"}, {"reference": "Condition/example2"}]}, {"title": "History of family member diseases", "code": {"coding": [{"system": "http://loinc.org", "code": "10157-6", "display": "History of family member diseases Narrative"}]}, "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\t\t<p>History of family member diseases - not available</p>\n\t\t\t</div>"}, "mode": "snapshot", "emptyReason": {"coding": [{"system": "http://terminology.hl7.org/CodeSystem/list-empty-reason", "code": "withheld", "display": "Information Withheld"}]}}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["Composition"], "parameters": [{"name": "attester", "in": "query", "schema": {"type": "string"}, "description": "Who attested the composition"}, {"name": "author", "in": "query", "schema": {"type": "string"}, "description": "Who and/or what authored the composition"}, {"name": "category", "in": "query", "schema": {"type": "string"}, "description": "Categorization of Composition"}, {"name": "confidentiality", "in": "query", "schema": {"type": "string"}, "description": "As defined by affinity domain"}, {"name": "context", "in": "query", "schema": {"type": "string"}, "description": "Code(s) that apply to the event being documented"}, {"name": "date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "Composition editing time"}, {"name": "encounter", "in": "query", "schema": {"type": "string"}, "description": "Context of the Composition"}, {"name": "entry", "in": "query", "schema": {"type": "string"}, "description": "A reference to data that supports this section"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "Version-independent identifier for the Composition"}, {"name": "patient", "in": "query", "schema": {"type": "string"}, "description": "Who and/or what the composition is about"}, {"name": "period", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "The period covered by the documentation"}, {"name": "related-id", "in": "query", "schema": {"type": "string"}, "description": "Target of the relationship"}, {"name": "related-ref", "in": "query", "schema": {"type": "string"}, "description": "Target of the relationship"}, {"name": "section", "in": "query", "schema": {"type": "string"}, "description": "Classification of section (recommended)"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "preliminary | final | amended | entered-in-error"}, {"name": "subject", "in": "query", "schema": {"type": "string"}, "description": "Who and/or what the composition is about"}, {"name": "title", "in": "query", "schema": {"type": "string"}, "description": "Human Readable name/title"}, {"name": "type", "in": "query", "schema": {"type": "string"}, "description": "Kind of composition (LOINC if possible)"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Composition"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Composition/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["Composition"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Composition"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["Composition"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Composition"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["Composition"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Composition/{id}/_history": {"get": {"tags": ["Composition"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Composition"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "A set of resources composed into a single coherent clinical statement with clinical attestation", "title": "FHIR R4 Composition Resource", "version": "unspecified"}, "tags": [{"name": "Composition"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"Composition": {"description": "A set of resources composed into a single coherent clinical statement with clinical attestation", "type": "object", "properties": {"attester": {"type": "array", "items": {"$ref": "#/components/schemas/Composition.attester"}, "description": ""}, "author": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Who and/or what authored the composition"}, "category": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Categorization of Composition"}, "confidentiality": {"type": "string", "description": "The code specifying the level of confidentiality of the Composition."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "custodian": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Organization which maintains the composition"}, "date": {"type": "string", "description": "The composition editing time, when the composition was last logically changed by the author."}, "encounter": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Describes the clinical encounter or type of care this documentation is associated with."}, "event": {"type": "array", "items": {"$ref": "#/components/schemas/Composition.event"}, "description": ""}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Version-independent identifier for the Composition"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "relatesTo": {"type": "array", "items": {"$ref": "#/components/schemas/Composition.relatesTo"}, "description": ""}, "section": {"type": "array", "items": {"$ref": "#/components/schemas/Composition.section"}, "description": ""}, "status": {"type": "string", "description": "preliminary | final | amended | entered-in-error"}, "subject": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Who and/or what the composition is about"}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "title": {"type": "string", "description": "Official human-readable label for the composition."}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Kind of composition (LOINC if possible)"}}, "required": ["id", "author", "date", "status", "title", "type"]}, "Composition.attester": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "mode": {"type": "string", "description": "personal | professional | legal | official"}, "party": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Who attested the composition"}, "time": {"type": "string", "description": "When the composition was attested"}}, "required": ["id", "mode"]}, "Composition.event": {"description": "", "type": "object", "properties": {"code": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Code(s) that apply to the event being documented"}, "detail": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "The event(s) being documented"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "The period covered by the documentation"}}, "required": ["id"]}, "Composition.relatesTo": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "replaces | transforms | signs | appends"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "target[x]": {"type": "string", "description": "Target of the relationship"}, "targetIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "targetReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}}, "required": ["id", "code", "target"]}, "Composition.section": {"description": "", "type": "object", "properties": {"author": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Who and/or what authored the section"}, "code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Classification of section (recommended)"}, "emptyReason": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Why the section is empty"}, "entry": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "A reference to data that supports this section"}, "focus": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Who/what the section is about, when it is not about the subject of composition"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "mode": {"type": "string", "description": "working | snapshot | changes"}, "orderedBy": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Order of section entries"}, "section": {"type": "array", "items": {"$ref": "#/components/schemas/Composition.section"}, "description": "Nested Section"}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the section, for human interpretation"}, "title": {"type": "string", "description": "Label for section (e.g. for ToC)"}}, "required": ["id"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}