{"paths": {"/FamilyMemberHistory/{id}/_history": {"get": {"tags": ["FamilyMemberHistory"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/FamilyMemberHistory"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/FamilyMemberHistory": {"post": {"tags": ["FamilyMemberHistory"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/FamilyMemberHistory"}, "examples": {"familymemberhistory-example-mother.json": {"value": {"resourceType": "FamilyMemberHistory", "id": "mother", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Mother died of a stroke aged 56</div>"}, "status": "completed", "patient": {"reference": "Patient/100", "display": "Peter Patient"}, "relationship": {"coding": [{"system": "http://terminology.hl7.org/CodeSystem/v3-RoleCode", "code": "MTH", "display": "mother"}]}, "condition": [{"code": {"coding": [{"system": "http://snomed.info/sct", "code": "371041009", "display": "Embolic Stroke"}], "text": "Stroke"}, "onsetAge": {"value": 56, "unit": "yr", "system": "http://unitsofmeasure.org", "code": "a"}}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}, "familymemberhistory-example.json": {"value": {"resourceType": "FamilyMemberHistory", "id": "father", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Father died of a heart attack aged 74</div>"}, "identifier": [{"value": "12345"}], "instantiatesUri": ["http://example.org/family-member-history-questionnaire"], "status": "completed", "patient": {"reference": "Patient/example", "display": "Peter Patient"}, "date": "2011-03-18", "relationship": {"coding": [{"system": "http://terminology.hl7.org/CodeSystem/v3-RoleCode", "code": "FTH", "display": "father"}]}, "sex": {"coding": [{"system": "http://hl7.org/fhir/administrative-gender", "code": "male", "display": "Male"}]}, "condition": [{"code": {"coding": [{"system": "http://snomed.info/sct", "code": "315619001", "display": "Myocardial Infarction"}], "text": "Heart Attack"}, "contributedToDeath": true, "onsetAge": {"value": 74, "unit": "yr", "system": "http://unitsofmeasure.org", "code": "a"}, "note": [{"text": "Was fishing at the time. At least he went doing someting he loved."}]}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["FamilyMemberHistory"], "parameters": [{"name": "code", "in": "query", "schema": {"type": "string"}, "description": "A search by a condition code"}, {"name": "date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "When history was recorded or last updated"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "A search by a record identifier"}, {"name": "instantiates-canonical", "in": "query", "schema": {"type": "string"}, "description": "Instantiates FHIR protocol or definition"}, {"name": "instantiates-uri", "in": "query", "schema": {"type": "string"}, "description": "Instantiates external protocol or definition"}, {"name": "patient", "in": "query", "schema": {"type": "string"}, "description": "The identity of a subject to list family member history items for"}, {"name": "relationship", "in": "query", "schema": {"type": "string"}, "description": "A search by a relationship type"}, {"name": "sex", "in": "query", "schema": {"type": "string"}, "description": "A search by a sex code of a family member"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "partial | completed | entered-in-error | health-unknown"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/FamilyMemberHistory"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/FamilyMemberHistory/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["FamilyMemberHistory"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/FamilyMemberHistory"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["FamilyMemberHistory"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/FamilyMemberHistory"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["FamilyMemberHistory"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/FamilyMemberHistory/{id}/_history/{vid}": {"get": {"tags": ["FamilyMemberHistory"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/FamilyMemberHistory"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Information about patient's relatives, relevant for patient", "title": "FHIR R4 FamilyMemberHistory Resource", "version": "unspecified"}, "tags": [{"name": "FamilyMemberHistory"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"FamilyMemberHistory": {"description": "Information about patient's relatives, relevant for patient", "type": "object", "properties": {"age[x]": {"type": "string", "description": "The age of the relative at the time the family member history is recorded."}, "ageAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "ageRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "ageString": {"type": "string", "description": ""}, "born[x]": {"type": "string", "description": "The actual or approximate date of birth of the relative."}, "bornDate": {"type": "string", "description": ""}, "bornPeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "bornString": {"type": "string", "description": ""}, "condition": {"type": "array", "items": {"$ref": "#/components/schemas/FamilyMemberHistory.condition"}, "description": ""}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "dataAbsentReason": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Describes why the family member's history is not available."}, "date": {"type": "string", "description": "The date (and possibly time) when the family member history was recorded or last updated."}, "deceased[x]": {"type": "string", "description": "Dead? How old/when?"}, "deceasedAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "deceasedBoolean": {"type": "boolean", "description": ""}, "deceasedDate": {"type": "string", "description": ""}, "deceasedRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "deceasedString": {"type": "string", "description": ""}, "estimatedAge": {"type": "boolean", "description": "If true, indicates that the age value specified is an estimated value."}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "External Id(s) for this record"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "instantiatesCanonical": {"type": "string", "description": "Instantiates FHIR protocol or definition"}, "instantiatesUri": {"type": "string", "description": "Instantiates external protocol or definition"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "name": {"type": "string", "description": "This will either be a name or a description; e.g. \"Aunt Susan\", \"my cousin with the red hair\"."}, "note": {"type": "array", "items": {"$ref": "#/components/schemas/Annotation"}, "description": "General note about related person"}, "patient": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The person who this history concerns."}, "reasonCode": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Describes why the family member history occurred in coded or textual form."}, "reasonReference": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Why was family member history performed?"}, "relationship": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The type of relationship this person has to the patient (father, mother, brother etc.)."}, "sex": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The birth sex of the family member."}, "status": {"type": "string", "description": "A code specifying the status of the record of the family history of a specific family member."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}}, "required": ["id", "patient", "relationship", "status"]}, "FamilyMemberHistory.condition": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Condition suffered by relation"}, "contributedToDeath": {"type": "boolean", "description": "Whether the condition contributed to the cause of death"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "note": {"type": "array", "items": {"$ref": "#/components/schemas/Annotation"}, "description": "Extra information about condition"}, "onset[x]": {"type": "string", "description": "When condition first manifested"}, "onsetAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "onsetPeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "onsetRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "onsetString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "outcome": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "deceased | permanent disability | etc."}}, "required": ["id", "code"]}, "Age": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": ""}, "comparator": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": ""}, "unit": {"type": "string", "description": ""}, "value": {"type": "number", "description": ""}}, "required": ["id"]}, "Range": {"description": "", "type": "object", "properties": {"high": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The high limit. The boundary is inclusive."}, "id": {"type": "string", "description": ""}, "low": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The low limit. The boundary is inclusive."}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Annotation": {"description": "", "type": "object", "properties": {"author[x]": {"type": "string", "description": "The individual responsible for making the annotation."}, "authorReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "authorString": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "The text of the annotation in markdown format."}, "time": {"type": "string", "description": "Indicates when this particular annotation was made."}}, "required": ["id", "text"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}