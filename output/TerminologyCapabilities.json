{"paths": {"/TerminologyCapabilities/{id}/_history/{vid}": {"get": {"tags": ["TerminologyCapabilities"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TerminologyCapabilities"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/TerminologyCapabilities": {"post": {"tags": ["TerminologyCapabilities"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TerminologyCapabilities"}, "examples": {"terminologycapabilities-example.json": {"value": {"resourceType": "TerminologyCapabilities", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<p>The EHR Server supports the following transactions for the resource Person: read, vread, \n        update, history, search(name,gender), create and updates.</p>\n\t\t\t<p>The EHR System supports the following message: admin-notify::Person.</p>\n\t\t\t<p>The EHR Application has a \n        <a href=\"http://fhir.hl7.org/base/Profilebc054d23-75e1-4dc6-aca5-838b6b1ac81d/_history/b5fdd9fc-b021-4ea1-911a-721a60663796\">general document profile</a>.\n      </p>\n\t\t</div>"}, "url": "urn:uuid:68D043B5-9ECF-4559-A57A-396E0D452311", "version": "20130510", "name": "ACME-EHR", "title": "ACME EHR capability statement", "status": "draft", "experimental": true, "date": "2012-01-04", "publisher": "ACME Corporation", "contact": [{"name": "System Administrator", "telecom": [{"system": "email", "value": "wile@acme.org"}]}], "description": "This is the FHIR capability statement for the main EHR at ACME for the private interface - it does not describe the public interface", "kind": "instance", "software": {"name": "TxServer", "version": "0.1.2"}, "implementation": {"description": "Acme Terminology Server", "url": "http://example.org/tx"}, "codeSearch": "explicit"}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["TerminologyCapabilities"], "parameters": [{"name": "context", "in": "query", "schema": {"type": "string"}, "description": "A use context assigned to the terminology capabilities"}, {"name": "context-quantity", "in": "query", "schema": {"type": "integer"}, "description": "A quantity- or range-valued use context assigned to the terminology capabilities"}, {"name": "context-type", "in": "query", "schema": {"type": "string"}, "description": "A type of use context assigned to the terminology capabilities"}, {"name": "date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "The terminology capabilities publication date"}, {"name": "description", "in": "query", "schema": {"type": "string"}, "description": "The description of the terminology capabilities"}, {"name": "jurisdiction", "in": "query", "schema": {"type": "string"}, "description": "Intended jurisdiction for the terminology capabilities"}, {"name": "name", "in": "query", "schema": {"type": "string"}, "description": "Computationally friendly name of the terminology capabilities"}, {"name": "publisher", "in": "query", "schema": {"type": "string"}, "description": "Name of the publisher of the terminology capabilities"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "The current status of the terminology capabilities"}, {"name": "title", "in": "query", "schema": {"type": "string"}, "description": "The human-friendly name of the terminology capabilities"}, {"name": "url", "in": "query", "schema": {"type": "string"}, "description": "The uri that identifies the terminology capabilities"}, {"name": "version", "in": "query", "schema": {"type": "string"}, "description": "The business version of the terminology capabilities"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TerminologyCapabilities"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/TerminologyCapabilities/{id}/_history": {"get": {"tags": ["TerminologyCapabilities"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TerminologyCapabilities"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/TerminologyCapabilities/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["TerminologyCapabilities"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TerminologyCapabilities"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["TerminologyCapabilities"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TerminologyCapabilities"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["TerminologyCapabilities"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "A statement of system capabilities", "title": "FHIR R4 TerminologyCapabilities Resource", "version": "unspecified"}, "tags": [{"name": "TerminologyCapabilities"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"TerminologyCapabilities": {"description": "A statement of system capabilities", "type": "object", "properties": {"closure": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TerminologyCapabilities.closure"}], "description": ""}, "codeSearch": {"type": "string", "description": "The degree to which the server supports the code search parameter on ValueSet, if it is supported."}, "codeSystem": {"type": "array", "items": {"$ref": "#/components/schemas/TerminologyCapabilities.codeSystem"}, "description": ""}, "contact": {"type": "array", "items": {"$ref": "#/components/schemas/ContactDetail"}, "description": "Contact details to assist a user in finding and communicating with the publisher."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "copyright": {"type": "string", "description": "Use and/or publishing restrictions"}, "date": {"type": "string", "description": "Date last changed"}, "description": {"type": "string", "description": "Natural language description of the terminology capabilities"}, "expansion": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TerminologyCapabilities.expansion"}], "description": ""}, "experimental": {"type": "boolean", "description": "For testing purposes, not real usage"}, "id": {"type": "string", "description": "Logical id of this artifact"}, "implementation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TerminologyCapabilities.implementation"}], "description": ""}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "jurisdiction": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "A legal or geographic region in which the terminology capabilities is intended to be used."}, "kind": {"type": "string", "description": "instance | capability | requirements"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "lockedDate": {"type": "boolean", "description": "Whether the server supports lockedDate."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "name": {"type": "string", "description": "Name for this terminology capabilities (computer friendly)"}, "publisher": {"type": "string", "description": "The name of the organization or individual that published the terminology capabilities."}, "purpose": {"type": "string", "description": "Explanation of why this terminology capabilities is needed and why it has been designed as it has."}, "software": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TerminologyCapabilities.software"}], "description": ""}, "status": {"type": "string", "description": "The status of this terminology capabilities. Enables tracking the life-cycle of the content."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "title": {"type": "string", "description": "A short, descriptive, user-friendly title for the terminology capabilities."}, "translation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TerminologyCapabilities.translation"}], "description": ""}, "url": {"type": "string", "description": "Canonical identifier for this terminology capabilities, represented as a URI (globally unique)"}, "useContext": {"type": "array", "items": {"$ref": "#/components/schemas/UsageContext"}, "description": "The context that the content is intended to support"}, "validateCode": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TerminologyCapabilities.validateCode"}], "description": ""}, "version": {"type": "string", "description": "Business version of the terminology capabilities"}}, "required": ["id", "date", "kind", "status"]}, "TerminologyCapabilities.closure": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "translation": {"type": "boolean", "description": "If cross-system closure is supported"}}, "required": ["id"]}, "TerminologyCapabilities.codeSystem": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "subsumption": {"type": "boolean", "description": "Whether subsumption is supported"}, "uri": {"type": "string", "description": "URI for the Code System"}, "version": {"type": "array", "items": {"$ref": "#/components/schemas/TerminologyCapabilities.codeSystem.version"}, "description": "Version of Code System supported"}}, "required": ["id"]}, "TerminologyCapabilities.codeSystem.version": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Version identifier for this version"}, "compositional": {"type": "boolean", "description": "If compositional grammar is supported"}, "filter": {"type": "array", "items": {"$ref": "#/components/schemas/TerminologyCapabilities.codeSystem.version.filter"}, "description": "Filter Properties supported"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "isDefault": {"type": "boolean", "description": "If this is the default version for this code system"}, "language": {"type": "string", "description": "Language Displays supported"}, "property": {"type": "string", "description": "Properties supported for $lookup"}}, "required": ["id"]}, "TerminologyCapabilities.codeSystem.version.filter": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Code of the property supported"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "op": {"type": "string", "description": "Operations supported for the property"}}, "required": ["id", "code", "op"]}, "TerminologyCapabilities.expansion": {"description": "", "type": "object", "properties": {"hierarchical": {"type": "boolean", "description": "Whether the server can return nested value sets"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "incomplete": {"type": "boolean", "description": "Allow request for incomplete expansions?"}, "paging": {"type": "boolean", "description": "Whether the server supports paging on expansion"}, "parameter": {"type": "array", "items": {"$ref": "#/components/schemas/TerminologyCapabilities.expansion.parameter"}, "description": "Supported expansion parameter"}, "textFilter": {"type": "string", "description": "Documentation about text searching works"}}, "required": ["id"]}, "TerminologyCapabilities.expansion.parameter": {"description": "", "type": "object", "properties": {"documentation": {"type": "string", "description": "Description of support for parameter"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "name": {"type": "string", "description": "Expansion Parameter name"}}, "required": ["id", "name"]}, "TerminologyCapabilities.implementation": {"description": "", "type": "object", "properties": {"description": {"type": "string", "description": "Describes this specific instance"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "url": {"type": "string", "description": "Base URL for the implementation"}}, "required": ["id", "description"]}, "TerminologyCapabilities.software": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "name": {"type": "string", "description": "A name the software is known by"}, "version": {"type": "string", "description": "Version covered by this statement"}}, "required": ["id", "name"]}, "TerminologyCapabilities.translation": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "needsMap": {"type": "boolean", "description": "Whether the client must identify the map"}}, "required": ["id", "needsMap"]}, "TerminologyCapabilities.validateCode": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "translations": {"type": "boolean", "description": "Whether translations are validated"}}, "required": ["id", "translations"]}, "ContactDetail": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "name": {"type": "string", "description": "The name of an individual to contact."}, "telecom": {"type": "array", "items": {"$ref": "#/components/schemas/ContactPoint"}, "description": "The contact details for the individual (if a name was provided) or the organization."}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "UsageContext": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": "A code that identifies the type of context being specified by this usage context."}, "id": {"type": "string", "description": ""}, "value[x]": {"type": "string", "description": "Value that defines the context"}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}}, "required": ["id", "code", "value"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}