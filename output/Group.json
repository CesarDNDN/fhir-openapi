{"paths": {"/Group": {"post": {"tags": ["Group"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Group"}, "examples": {"group-example-herd1.json": {"value": {"resourceType": "Group", "id": "herd1", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: herd1</p><p><b>identifier</b>: 20171120-1234</p><p><b>active</b>: true</p><p><b>type</b>: animal</p><p><b>actual</b>: true</p><p><b>code</b>: Porcine <span>(Details : {SNOMED CT code '388393002' = 'Genus Sus', given as 'Genus Sus (organism)'}; {https://www.aphis.usda.gov code 'POR' = 'POR', given as 'porcine'})</span></p><p><b>name</b>: Breeding herd</p><p><b>quantity</b>: 2500</p><h3>Characteristics</h3><table><tr><td>-</td><td><b>Code</b></td><td><b>Value[x]</b></td><td><b>Exclude</b></td></tr><tr><td>*</td><td>gender <span>(Details )</span></td><td>female <span>(Details )</span></td><td>false</td></tr></table></div>"}, "extension": [{"url": "http://example.org/fhir/StructureDefinition/owner", "valueReference": {"reference": "RelatedPerson/peter", "display": "Peter Chalmers"}}], "identifier": [{"system": "https://vetmed.iastate.edu/vdl", "value": "20171120-1234"}], "active": true, "type": "animal", "actual": true, "code": {"coding": [{"system": "http://snomed.info/sct", "code": "388393002", "display": "Genus Sus (organism)"}, {"system": "https://www.aphis.usda.gov", "code": "POR", "display": "porcine"}], "text": "Porcine"}, "name": "Breeding herd", "quantity": 2500, "characteristic": [{"code": {"text": "gender"}, "valueCodeableConcept": {"text": "female"}, "exclude": false}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}, "group-example-member.json": {"value": {"resourceType": "Group", "id": "102", "text": {"status": "additional", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n      <p>Selected Patients</p>\n      <ul>\n        <li>Patient Donald DUCK @ Acme Healthcare, Inc. MR = 654321</li>\n        <li>Patient Donald D DUCK @ Acme Healthcare, Inc. MR = 123456</li>\n        <li>Patient Simon Notsowell @ Acme Healthcare, Inc. MR = 123457, DECEASED</li>\n        <li>Patient Sandy Notsowell @ Acme Healthcare, Inc. MR = 123458, DECEASED</li>\n      </ul>\n    </div>"}, "type": "person", "actual": true, "member": [{"entity": {"reference": "Patient/pat1"}, "period": {"start": "2014-10-08"}}, {"entity": {"reference": "Patient/pat2"}, "period": {"start": "2015-04-02"}, "inactive": true}, {"entity": {"reference": "Patient/pat3"}, "period": {"start": "2015-08-06"}}, {"entity": {"reference": "Patient/pat4"}, "period": {"start": "2015-08-06"}}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}, "group-example-patientlist.json": {"value": {"resourceType": "Group", "id": "example-patientlist", "text": {"status": "additional", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n      <p>All patients primarily attributed to Practitioner 123</p>\n    </div>"}, "type": "person", "actual": true, "characteristic": [{"code": {"coding": [{"system": "http://example.org", "code": "attributed-to"}], "text": "Patients primarily attributed to"}, "valueReference": {"reference": "Practitioner/123"}, "exclude": false}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}, "group-example.json": {"value": {"resourceType": "Group", "id": "101", "text": {"status": "additional", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n      <p>Herd of 25 horses</p>\n      <p>Gender: mixed</p>\n      <p>Owner: John Smith</p>\n    </div>"}, "identifier": [{"system": "http://someveterinarianclinic.org/fhir/NamingSystem/herds", "value": "12345"}], "type": "animal", "actual": true, "code": {"text": "Horse"}, "name": "John's herd", "quantity": 25, "characteristic": [{"code": {"text": "gender"}, "valueCodeableConcept": {"text": "mixed"}, "exclude": false}, {"code": {"text": "owner"}, "valueCodeableConcept": {"text": "John Smith"}, "exclude": false}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["Group"], "parameters": [{"name": "actual", "in": "query", "schema": {"type": "string"}, "description": "Descriptive or actual"}, {"name": "characteristic", "in": "query", "schema": {"type": "string"}, "description": "Kind of characteristic"}, {"name": "code", "in": "query", "schema": {"type": "string"}, "description": "The kind of resources contained"}, {"name": "exclude", "in": "query", "schema": {"type": "string"}, "description": "Group includes or excludes"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "Unique id"}, {"name": "managing-entity", "in": "query", "schema": {"type": "string"}, "description": "Entity that is the custodian of the Group's definition"}, {"name": "member", "in": "query", "schema": {"type": "string"}, "description": "Reference to the group member"}, {"name": "type", "in": "query", "schema": {"type": "string"}, "description": "The type of resources the group contains"}, {"name": "value", "in": "query", "schema": {"type": "string"}, "description": "Value held by characteristic"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Group"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Group/{id}/_history": {"get": {"tags": ["Group"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Group"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Group/{id}/_history/{vid}": {"get": {"tags": ["Group"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Group"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Group/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["Group"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Group"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["Group"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Group"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["Group"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Group of multiple entities", "title": "FHIR R4 Group Resource", "version": "unspecified"}, "tags": [{"name": "Group"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"ChargeItemDefinition.propertyGroup": {"description": "", "type": "object", "properties": {"applicability": {"type": "array", "items": {"$ref": "#/components/schemas/ChargeItemDefinition.applicability"}, "description": "Conditions under which the priceComponent is applicable"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "priceComponent": {"type": "array", "items": {"$ref": "#/components/schemas/ChargeItemDefinition.propertyGroup.priceComponent"}, "description": "Components of total line item price"}}, "required": ["id"]}, "ChargeItemDefinition.propertyGroup.priceComponent": {"description": "", "type": "object", "properties": {"amount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": "Monetary amount associated with this component"}, "code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Code identifying the specific component"}, "factor": {"type": "number", "description": "Factor used for calculating this component"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "type": {"type": "string", "description": "base | surcharge | deduction | discount | tax | informational"}}, "required": ["id", "type"]}, "Group": {"description": "Group of multiple entities", "type": "object", "properties": {"active": {"type": "boolean", "description": "Whether this group's record is in active use"}, "actual": {"type": "boolean", "description": "Descriptive or actual"}, "characteristic": {"type": "array", "items": {"$ref": "#/components/schemas/Group.characteristic"}, "description": ""}, "code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Provides a specific type of resource the group includes; e.g. \"cow\", \"syringe\", etc."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "A unique business identifier for this group."}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "managingEntity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Entity responsible for defining and maintaining Group characteristics and/or registered members."}, "member": {"type": "array", "items": {"$ref": "#/components/schemas/Group.member"}, "description": ""}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "name": {"type": "string", "description": "A label assigned to the group for human identification and communication."}, "quantity": {"type": "number", "description": "A count of the number of resource instances that are part of the group."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "type": {"type": "string", "description": "Identifies the broad classification of the kind of resources the group includes."}}, "required": ["id", "actual", "type"]}, "Group.characteristic": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Kind of characteristic"}, "exclude": {"type": "boolean", "description": "Group includes or excludes"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Period over which characteristic is tested"}, "value[x]": {"type": "string", "description": "Value held by characteristic"}, "valueBoolean": {"type": "boolean", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}}, "required": ["id", "code", "exclude", "value"]}, "Group.member": {"description": "", "type": "object", "properties": {"entity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Reference to the group member"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "inactive": {"type": "boolean", "description": "If member is no longer in group"}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Period member belonged to the group"}}, "required": ["id", "entity"]}, "RequestGroup": {"description": "A group of related requests", "type": "object", "properties": {"action": {"type": "array", "items": {"$ref": "#/components/schemas/RequestGroup.action"}, "description": ""}, "author": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Provides a reference to the author of the request group."}, "authoredOn": {"type": "string", "description": "Indicates when the request group was created."}, "basedOn": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "A plan, proposal or order that is fulfilled in whole or in part by this request."}, "code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "A code that identifies what the overall request group is."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "encounter": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Describes the context of the request group, if any."}, "groupIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Composite request this is part of"}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "Allows a service to provide a unique, business identifier for the request."}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "instantiatesCanonical": {"type": "string", "description": "Instantiates FHIR protocol or definition"}, "instantiatesUri": {"type": "string", "description": "Instantiates external protocol or definition"}, "intent": {"type": "string", "description": "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "note": {"type": "array", "items": {"$ref": "#/components/schemas/Annotation"}, "description": "Provides a mechanism to communicate additional information about the response."}, "priority": {"type": "string", "description": "Indicates how quickly the request should be addressed with respect to other requests."}, "reasonCode": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Describes the reason for the request group in coded or textual form."}, "reasonReference": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Indicates another resource whose existence justifies this request group."}, "replaces": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Completed or terminated request(s) whose function is taken by this new request."}, "status": {"type": "string", "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown"}, "subject": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The subject for which the request group was created."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}}, "required": ["id", "intent", "status"]}, "RequestGroup.action": {"description": "", "type": "object", "properties": {"action": {"type": "array", "items": {"$ref": "#/components/schemas/RequestGroup.action"}, "description": "Sub action"}, "cardinalityBehavior": {"type": "string", "description": "single | multiple"}, "code": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Code representing the meaning of the action or sub-actions"}, "condition": {"type": "array", "items": {"$ref": "#/components/schemas/RequestGroup.action.condition"}, "description": "Whether or not the action is applicable"}, "description": {"type": "string", "description": "Short description of the action"}, "documentation": {"type": "array", "items": {"$ref": "#/components/schemas/RelatedArtifact"}, "description": "Supporting documentation for the intended performer of the action"}, "groupingBehavior": {"type": "string", "description": "visual-group | logical-group | sentence-group"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "participant": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Who should perform the action"}, "precheckBehavior": {"type": "string", "description": "yes | no"}, "prefix": {"type": "string", "description": "User-visible prefix for the action (e.g. 1. or A.)"}, "priority": {"type": "string", "description": "routine | urgent | asap | stat"}, "relatedAction": {"type": "array", "items": {"$ref": "#/components/schemas/RequestGroup.action.relatedAction"}, "description": "Relationship to another action"}, "requiredBehavior": {"type": "string", "description": "must | could | must-unless-documented"}, "resource": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The target of the action"}, "selectionBehavior": {"type": "string", "description": "any | all | all-or-none | exactly-one | at-most-one | one-or-more"}, "textEquivalent": {"type": "string", "description": "Static text equivalent of the action, used if the dynamic aspects cannot be interpreted by the receiving system"}, "timing[x]": {"type": "string", "description": "When the action should take place"}, "timingAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "timingDateTime": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "timingDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "timingPeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "timingRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "timingTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "title": {"type": "string", "description": "User-visible title"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "create | update | remove | fire-event"}}, "required": ["id"]}, "RequestGroup.action.condition": {"description": "", "type": "object", "properties": {"expression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": "Boolean-valued expression"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "kind": {"type": "string", "description": "applicability | start | stop"}}, "required": ["id", "kind"]}, "RequestGroup.action.relatedAction": {"description": "", "type": "object", "properties": {"actionId": {"type": "string", "description": "What action this is related to"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "offset[x]": {"type": "string", "description": "Time offset for the relationship"}, "offsetDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "offsetRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "relationship": {"type": "string", "description": "before-start | before | before-end | concurrent-with-start | concurrent | concurrent-with-end | after-start | after | after-end"}}, "required": ["id", "actionId", "relationship"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Quantity": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "A computer processable form of the unit in some unit representation system."}, "comparator": {"type": "string", "description": "< | <= | >= | > - how to understand the value"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "system": {"type": "string", "description": "The identification of the system that provides the coded form of the unit."}, "unit": {"type": "string", "description": "A human-readable form of the unit."}, "value": {"type": "number", "description": "Numerical value (with implicit precision)"}}, "required": ["id"]}, "Range": {"description": "", "type": "object", "properties": {"high": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The high limit. The boundary is inclusive."}, "id": {"type": "string", "description": ""}, "low": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The low limit. The boundary is inclusive."}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}