{"paths": {"/ImmunizationRecommendation": {"post": {"tags": ["ImmunizationRecommendation"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ImmunizationRecommendation"}, "examples": {"immunizationrecommendation-example-target-disease.json": {"value": {"resourceType": "ImmunizationRecommendation", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Authored by Joginder Madra</div>"}, "identifier": [{"system": "urn:ietf:rfc:3986", "value": "urn:oid:1.3.6.1.4.1.21367.2005.3.7.1235"}], "patient": {"reference": "Patient/example"}, "date": "2015-02-09T11:04:15.817-05:00", "authority": {"reference": "Organization/hl7"}, "recommendation": [{"targetDisease": {"coding": [{"system": "http://snomed.info/sct", "code": "40468003"}]}, "forecastStatus": {"text": "Not Complete"}, "dateCriterion": [{"code": {"coding": [{"system": "http://loinc.org", "code": "30981-5", "display": "Earliest date to give"}]}, "value": "2015-12-01T00:00:00-05:00"}, {"code": {"coding": [{"system": "http://example.org/fhir/CodeSystem/immunization-recommendation-date-criterion", "code": "recommended", "display": "Recommended"}]}, "value": "2015-12-01T00:00:00-05:00"}, {"code": {"coding": [{"system": "http://example.org/fhir/CodeSystem/immunization-recommendation-date-criterion", "code": "overdue", "display": "Past Due Date"}]}, "value": "2016-12-28T00:00:00-05:00"}], "description": "First sequence in protocol", "series": "Vaccination Series 1", "doseNumberPositiveInt": 1, "seriesDosesPositiveInt": 3, "supportingImmunization": [{"reference": "Immunization/example"}], "supportingPatientInformation": [{"reference": "Observation/example"}]}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}, "immunizationrecommendation-example.json": {"value": {"resourceType": "ImmunizationRecommendation", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Authored by Joginder Madra</div>"}, "identifier": [{"system": "urn:ietf:rfc:3986", "value": "urn:oid:1.3.6.1.4.1.21367.2005.3.7.1235"}], "patient": {"reference": "Patient/example"}, "date": "2015-02-09T11:04:15.817-05:00", "authority": {"reference": "Organization/hl7"}, "recommendation": [{"vaccineCode": [{"coding": [{"system": "http://snomed.info/sct", "code": "14745005", "display": "Hepatitis A vaccine"}]}], "forecastStatus": {"text": "Not Complete"}, "dateCriterion": [{"code": {"coding": [{"system": "http://example.org/fhir/CodeSystem/immunization-recommendation-date-criterion", "code": "earliest", "display": "Earliest Date"}]}, "value": "2015-12-01T00:00:00-05:00"}, {"code": {"coding": [{"system": "http://example.org/fhir/CodeSystem/immunization-recommendation-date-criterion", "code": "recommended", "display": "Recommended"}]}, "value": "2015-12-01T00:00:00-05:00"}, {"code": {"coding": [{"system": "http://example.org/fhir/CodeSystem/immunization-recommendation-date-criterion", "code": "overdue", "display": "Past Due Date"}]}, "value": "2016-12-28T00:00:00-05:00"}], "description": "First sequence in protocol", "series": "Vaccination Series 1", "doseNumberPositiveInt": 1, "seriesDosesPositiveInt": 3, "supportingImmunization": [{"reference": "Immunization/example"}], "supportingPatientInformation": [{"reference": "Observation/example"}]}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["ImmunizationRecommendation"], "parameters": [{"name": "date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "Date recommendation(s) created"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "Business identifier"}, {"name": "information", "in": "query", "schema": {"type": "string"}, "description": "Patient observations supporting recommendation"}, {"name": "patient", "in": "query", "schema": {"type": "string"}, "description": "Who this profile is for"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "Vaccine recommendation status"}, {"name": "support", "in": "query", "schema": {"type": "string"}, "description": "Past immunizations supporting recommendation"}, {"name": "target-disease", "in": "query", "schema": {"type": "string"}, "description": "Disease to be immunized against"}, {"name": "vaccine-type", "in": "query", "schema": {"type": "string"}, "description": "Vaccine  or vaccine group recommendation applies to"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ImmunizationRecommendation"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/ImmunizationRecommendation/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["ImmunizationRecommendation"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ImmunizationRecommendation"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["ImmunizationRecommendation"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ImmunizationRecommendation"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["ImmunizationRecommendation"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/ImmunizationRecommendation/{id}/_history": {"get": {"tags": ["ImmunizationRecommendation"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ImmunizationRecommendation"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/ImmunizationRecommendation/{id}/_history/{vid}": {"get": {"tags": ["ImmunizationRecommendation"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ImmunizationRecommendation"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Guidance or advice relating to an immunization", "title": "FHIR R4 ImmunizationRecommendation Resource", "version": "unspecified"}, "tags": [{"name": "ImmunizationRecommendation"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"ImmunizationRecommendation": {"description": "Guidance or advice relating to an immunization", "type": "object", "properties": {"authority": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Indicates the authority who published the protocol (e.g. ACIP)."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "date": {"type": "string", "description": "The date the immunization recommendation(s) were created."}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "A unique identifier assigned to this particular recommendation record."}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "patient": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The patient the recommendation(s) are for."}, "recommendation": {"type": "array", "items": {"$ref": "#/components/schemas/ImmunizationRecommendation.recommendation"}, "description": ""}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}}, "required": ["id", "date", "patient", "recommendation"]}, "ImmunizationRecommendation.recommendation": {"description": "", "type": "object", "properties": {"contraindicatedVaccineCode": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Vaccine which is contraindicated to fulfill the recommendation"}, "dateCriterion": {"type": "array", "items": {"$ref": "#/components/schemas/ImmunizationRecommendation.recommendation.dateCriterion"}, "description": "Dates governing proposed immunization"}, "description": {"type": "string", "description": "Protocol details"}, "doseNumber[x]": {"type": "string", "description": "Recommended dose number within series"}, "doseNumberPositiveInt": {"type": "number", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "doseNumberString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "forecastReason": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Vaccine administration status reason"}, "forecastStatus": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Vaccine recommendation status"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "series": {"type": "string", "description": "Name of vaccination series"}, "seriesDoses[x]": {"type": "string", "description": "Recommended number of doses for immunity"}, "seriesDosesPositiveInt": {"type": "number", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "seriesDosesString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "supportingImmunization": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Past immunizations supporting recommendation"}, "supportingPatientInformation": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Patient observations supporting recommendation"}, "targetDisease": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Disease to be immunized against"}, "vaccineCode": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Vaccine  or vaccine group recommendation applies to"}}, "required": ["id", "forecastStatus"]}, "ImmunizationRecommendation.recommendation.dateCriterion": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of date"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "value": {"type": "string", "description": "Recommended date"}}, "required": ["id", "code", "value"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}