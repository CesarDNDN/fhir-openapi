{"paths": {"/Communication": {"post": {"tags": ["Communication"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Communication"}, "examples": {"communication-example-fm-attachment.json": {"value": {"resourceType": "Communication", "id": "fm-attachment", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Attachment which is unsolicited</div>"}, "identifier": [{"system": "http://www.providerco.com/communication", "value": "12345"}], "status": "completed", "category": [{"coding": [{"system": "http://acme.org/messagetypes", "code": "SolicitedAttachment"}]}], "subject": {"reference": "Patient/1"}, "about": [{"identifier": {"system": "http://happyvalley.com/claim", "value": "12345"}}, {"identifier": {"system": "http://www.BenefitsInc.com/fhir/claimresponse", "value": "R3500"}}], "sent": "2016-06-12T18:01:10-08:00", "recipient": [{"identifier": {"system": "http://www.jurisdiction.com/insurer", "value": "123456"}}], "sender": {"identifier": {"system": "http://www.jurisdiction.com/provideroffices", "value": "3456"}}, "payload": [{"contentAttachment": {"contentType": "application/pdf", "data": "SGVsbG8=", "title": "accident notes 20100201.pdf", "creation": "2010-02-01T11:50:23-05:00"}}, {"contentAttachment": {"contentType": "application/pdf", "url": "http://example.org/docs/AB12345", "size": 104274, "hash": "SGVsbG8gdGhlcmU=", "creation": "2010-02-01T10:57:34+01:00"}}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}, "communication-example-fm-solicited-attachment.json": {"value": {"resourceType": "Communication", "id": "fm-solicited", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Attachment in response to a Request</div>"}, "contained": [{"resourceType": "Organization", "id": "provider", "identifier": [{"system": "http://www.jurisdiction.com/provideroffices", "value": "3456"}]}, {"resourceType": "Organization", "id": "payor", "identifier": [{"system": "http://www.jurisdiction.com/insurer", "value": "123456"}]}, {"resourceType": "CommunicationRequest", "id": "request", "identifier": [{"system": "http://www.jurisdiction.com/insurer/123456", "value": "ABC123"}], "status": "completed", "subject": {"reference": "Patient/1"}}], "identifier": [{"system": "http://www.providerco.com/communication", "value": "12345"}], "basedOn": [{"reference": "#request"}], "status": "completed", "category": [{"coding": [{"system": "http://acme.org/messagetypes", "code": "SolicitedAttachment"}]}], "subject": {"reference": "Patient/1"}, "sent": "2016-06-12T18:01:10-08:00", "recipient": [{"reference": "#payor"}], "sender": {"reference": "#provider"}, "payload": [{"contentAttachment": {"contentType": "application/pdf", "data": "SGVsbG8=", "title": "accident notes 20100201.pdf", "creation": "2010-02-01T11:50:23-05:00"}}, {"contentAttachment": {"contentType": "application/pdf", "url": "http://happyvalley.com/docs/AB12345", "size": 104274, "hash": "SGVsbG8gdGhlcmU=", "creation": "2010-02-01T10:57:34+01:00"}}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}, "communication-example.json": {"value": {"resourceType": "Communication", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Patient has very high serum potassium</div>"}, "identifier": [{"type": {"text": "Paging System"}, "system": "urn:oid:1.3.4.5.6.7", "value": "2345678901"}], "instantiatesUri": ["http://example.org/hyperkalemia"], "partOf": [{"display": "Serum Potassium Observation"}], "status": "completed", "category": [{"coding": [{"system": "http://acme.org/messagetypes", "code": "Alert"}], "text": "Alert"}], "medium": [{"coding": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ParticipationMode", "code": "WRITTEN", "display": "written"}], "text": "written"}], "subject": {"reference": "Patient/example"}, "encounter": {"reference": "Encounter/example"}, "sent": "2014-12-12T18:01:10-08:00", "received": "2014-12-12T18:01:11-08:00", "recipient": [{"reference": "Practitioner/example"}], "sender": {"reference": "Device/f001"}, "payload": [{"contentString": "Patient 1 has a very high serum potassium value (7.2 mmol/L on 2014-Dec-12 at 5:55 pm)"}, {"contentReference": {"display": "Serum Potassium Observation"}}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["Communication"], "parameters": [{"name": "based-on", "in": "query", "schema": {"type": "string"}, "description": "Request fulfilled by this communication"}, {"name": "category", "in": "query", "schema": {"type": "string"}, "description": "Message category"}, {"name": "encounter", "in": "query", "schema": {"type": "string"}, "description": "Encounter created as part of"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "Unique identifier"}, {"name": "instantiates-canonical", "in": "query", "schema": {"type": "string"}, "description": "Instantiates FHIR protocol or definition"}, {"name": "instantiates-uri", "in": "query", "schema": {"type": "string"}, "description": "Instantiates external protocol or definition"}, {"name": "medium", "in": "query", "schema": {"type": "string"}, "description": "A channel of communication"}, {"name": "part-of", "in": "query", "schema": {"type": "string"}, "description": "Part of this action"}, {"name": "patient", "in": "query", "schema": {"type": "string"}, "description": "Focus of message"}, {"name": "received", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "When received"}, {"name": "recipient", "in": "query", "schema": {"type": "string"}, "description": "Message recipient"}, {"name": "sender", "in": "query", "schema": {"type": "string"}, "description": "Message sender"}, {"name": "sent", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "When sent"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown"}, {"name": "subject", "in": "query", "schema": {"type": "string"}, "description": "Focus of message"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Communication"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Communication/{id}/_history/{vid}": {"get": {"tags": ["Communication"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Communication"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Communication/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["Communication"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Communication"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["Communication"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/Communication"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["Communication"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/Communication/{id}/_history": {"get": {"tags": ["Communication"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Communication"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "A record of information transmitted from a sender to a receiver", "title": "FHIR R4 Communication Resource", "version": "unspecified"}, "tags": [{"name": "Communication"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"Communication": {"description": "A record of information transmitted from a sender to a receiver", "type": "object", "properties": {"about": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Resources that pertain to this communication"}, "basedOn": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "An order, proposal or plan fulfilled in whole or in part by this Communication."}, "category": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "The type of message conveyed such as alert, notification, reminder, instruction, etc."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "encounter": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Encounter created as part of"}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "Unique identifier"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "inResponseTo": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Prior communication that this communication is in response to."}, "instantiatesCanonical": {"type": "string", "description": "Instantiates FHIR protocol or definition"}, "instantiatesUri": {"type": "string", "description": "Instantiates external protocol or definition"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "medium": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "A channel that was used for this communication (e.g. email, fax)."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "note": {"type": "array", "items": {"$ref": "#/components/schemas/Annotation"}, "description": "Comments made about the communication"}, "partOf": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Part of this action."}, "payload": {"type": "array", "items": {"$ref": "#/components/schemas/Communication.payload"}, "description": ""}, "priority": {"type": "string", "description": "routine | urgent | asap | stat"}, "reasonCode": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "The reason or justification for the communication."}, "reasonReference": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Indicates another resource whose existence justifies this communication."}, "received": {"type": "string", "description": "The time when this communication arrived at the destination."}, "recipient": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Message recipient"}, "sender": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Message sender"}, "sent": {"type": "string", "description": "The time when this communication was sent."}, "status": {"type": "string", "description": "The status of the transmission."}, "statusReason": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Captures the reason for the current state of the Communication."}, "subject": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The patient or group that was the focus of this communication."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "topic": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of the purpose/content, similar to a subject line in an email."}}, "required": ["id", "status"]}, "Communication.payload": {"description": "", "type": "object", "properties": {"content[x]": {"type": "string", "description": "Message part content"}, "contentAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "contentReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "contentString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}}, "required": ["id", "content"]}, "CommunicationRequest": {"description": "A request for information to be sent to a receiver", "type": "object", "properties": {"about": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Resources that pertain to this communication request"}, "authoredOn": {"type": "string", "description": "When request transitioned to being actionable"}, "basedOn": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "A plan or proposal that is fulfilled in whole or in part by this request."}, "category": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "The type of message to be sent such as alert, notification, reminder, instruction, etc."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "doNotPerform": {"type": "boolean", "description": "If true indicates that the CommunicationRequest is asking for the specified action to *not* occur."}, "encounter": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Encounter created as part of"}, "groupIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Composite request this is part of"}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "Unique identifier"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "medium": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "A channel that was used for this communication (e.g. email, fax)."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "note": {"type": "array", "items": {"$ref": "#/components/schemas/Annotation"}, "description": "Comments made about the request by the requester, sender, recipient, subject or other participants."}, "occurrence[x]": {"type": "string", "description": "The time when this communication is to occur."}, "occurrenceDateTime": {"type": "string", "description": ""}, "occurrencePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "payload": {"type": "array", "items": {"$ref": "#/components/schemas/CommunicationRequest.payload"}, "description": ""}, "priority": {"type": "string", "description": "routine | urgent | asap | stat"}, "reasonCode": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Describes why the request is being made in coded or textual form."}, "reasonReference": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Indicates another resource whose existence justifies this request."}, "recipient": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Message recipient"}, "replaces": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Completed or terminated request(s) whose function is taken by this new request."}, "requester": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Who/what is requesting service"}, "sender": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Message sender"}, "status": {"type": "string", "description": "The status of the proposal or order."}, "statusReason": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Captures the reason for the current state of the CommunicationRequest."}, "subject": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The patient or group that is the focus of this communication request."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}}, "required": ["id", "status"]}, "CommunicationRequest.payload": {"description": "", "type": "object", "properties": {"content[x]": {"type": "string", "description": "Message part content"}, "contentAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "contentReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "contentString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}}, "required": ["id", "content"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Annotation": {"description": "", "type": "object", "properties": {"author[x]": {"type": "string", "description": "The individual responsible for making the annotation."}, "authorReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "authorString": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "The text of the annotation in markdown format."}, "time": {"type": "string", "description": "Indicates when this particular annotation was made."}}, "required": ["id", "text"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Attachment": {"description": "", "type": "object", "properties": {"contentType": {"type": "string", "description": "Mime type of the content, with charset etc."}, "creation": {"type": "string", "description": "The date that the attachment was first created."}, "data": {"type": "string", "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."}, "hash": {"type": "string", "description": "The calculated hash of the data using SHA-1. Represented using base64."}, "id": {"type": "string", "description": ""}, "language": {"type": "string", "description": "The human language of the content. The value can be any valid value according to BCP 47."}, "size": {"type": "number", "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."}, "title": {"type": "string", "description": "A label or set of text to display in place of the data."}, "url": {"type": "string", "description": "A location where the data can be accessed."}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}