{"paths": {"/InsurancePlan/{id}/_history": {"get": {"tags": ["InsurancePlan"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/InsurancePlan": {"post": {"tags": ["InsurancePlan"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/InsurancePlan"}, "examples": {"insuranceplan-example.json": {"value": {"resourceType": "InsurancePlan", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example</p><p><b>name</b>: foo</p></div>"}, "name": "foo", "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["InsurancePlan"], "parameters": [{"name": "address", "in": "query", "schema": {"type": "string"}, "description": "A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text"}, {"name": "address-city", "in": "query", "schema": {"type": "string"}, "description": "A city specified in an address"}, {"name": "address-country", "in": "query", "schema": {"type": "string"}, "description": "A country specified in an address"}, {"name": "address-postalcode", "in": "query", "schema": {"type": "string"}, "description": "A postal code specified in an address"}, {"name": "address-state", "in": "query", "schema": {"type": "string"}, "description": "A state specified in an address"}, {"name": "address-use", "in": "query", "schema": {"type": "string"}, "description": "A use code specified in an address"}, {"name": "administered-by", "in": "query", "schema": {"type": "string"}, "description": "Product administrator"}, {"name": "endpoint", "in": "query", "schema": {"type": "string"}, "description": "Technical endpoint"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "Any identifier for the organization (not the accreditation issuer's identifier)"}, {"name": "name", "in": "query", "schema": {"type": "string"}, "description": "A portion of the organization's name or alias"}, {"name": "owned-by", "in": "query", "schema": {"type": "string"}, "description": "An organization of which this organization forms a part"}, {"name": "phonetic", "in": "query", "schema": {"type": "string"}, "description": "A portion of the organization's name using some kind of phonetic matching algorithm"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "Is the Organization record active"}, {"name": "type", "in": "query", "schema": {"type": "string"}, "description": "A code for the type of organization"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/InsurancePlan"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/InsurancePlan/{id}/_history/{vid}": {"get": {"tags": ["InsurancePlan"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/InsurancePlan"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/InsurancePlan/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["InsurancePlan"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/InsurancePlan"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["InsurancePlan"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/InsurancePlan"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["InsurancePlan"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Details of a Health Insurance product/plan provided by an organization", "title": "FHIR R4 InsurancePlan Resource", "version": "unspecified"}, "tags": [{"name": "InsurancePlan"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"InsurancePlan": {"description": "Details of a Health Insurance product/plan provided by an organization", "type": "object", "properties": {"administeredBy": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Product administrator"}, "alias": {"type": "string", "description": "A list of alternate names that the product is known as, or was known as in the past."}, "contact": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan.contact"}, "description": ""}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "coverage": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan.coverage"}, "description": ""}, "coverageArea": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "The geographic region in which a health insurance product's benefits apply."}, "endpoint": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "The technical endpoints providing access to services operated for the health insurance product."}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "Business Identifier for Product"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "name": {"type": "string", "description": "Official name of the health insurance product as designated by the owner."}, "network": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Reference to the network included in the health insurance product."}, "ownedBy": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Plan issuer"}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "The period of time that the health insurance product is available."}, "plan": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan.plan"}, "description": ""}, "status": {"type": "string", "description": "The current state of the health insurance product."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "type": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "The kind of health insurance product."}}, "required": ["id"]}, "InsurancePlan.contact": {"description": "", "type": "object", "properties": {"address": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": "Visiting or postal addresses for the contact"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "name": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": "A name associated with the contact"}, "purpose": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The type of contact"}, "telecom": {"type": "array", "items": {"$ref": "#/components/schemas/ContactPoint"}, "description": "Contact details (telephone, email, etc.)  for a contact"}}, "required": ["id"]}, "InsurancePlan.coverage": {"description": "", "type": "object", "properties": {"benefit": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan.coverage.benefit"}, "description": "List of benefits"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "network": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "What networks provide coverage"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of coverage"}}, "required": ["id", "benefit", "type"]}, "InsurancePlan.coverage.benefit": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "limit": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan.coverage.benefit.limit"}, "description": "Benefit limits"}, "requirement": {"type": "string", "description": "Referral requirements"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of benefit"}}, "required": ["id", "type"]}, "InsurancePlan.coverage.benefit.limit": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Benefit limit details"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "value": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "Maximum value allowed"}}, "required": ["id"]}, "InsurancePlan.plan": {"description": "", "type": "object", "properties": {"coverageArea": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Where product applies"}, "generalCost": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan.plan.generalCost"}, "description": "Overall costs"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "Business Identifier for Product"}, "network": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "What networks provide coverage"}, "specificCost": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan.plan.specificCost"}, "description": "Specific costs"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of plan"}}, "required": ["id"]}, "InsurancePlan.plan.generalCost": {"description": "", "type": "object", "properties": {"comment": {"type": "string", "description": "Additional cost information"}, "cost": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": "Cost value"}, "groupSize": {"type": "number", "description": "Number of enrollees"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of cost"}}, "required": ["id"]}, "InsurancePlan.plan.specificCost": {"description": "", "type": "object", "properties": {"benefit": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan.plan.specificCost.benefit"}, "description": "Benefits list"}, "category": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "General category of benefit"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}}, "required": ["id", "category"]}, "InsurancePlan.plan.specificCost.benefit": {"description": "", "type": "object", "properties": {"cost": {"type": "array", "items": {"$ref": "#/components/schemas/InsurancePlan.plan.specificCost.benefit.cost"}, "description": "List of the costs"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of specific benefit"}}, "required": ["id", "type"]}, "InsurancePlan.plan.specificCost.benefit.cost": {"description": "", "type": "object", "properties": {"applicability": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "in-network | out-of-network | other"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "qualifiers": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Additional information about the cost"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of cost"}, "value": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The actual cost value"}}, "required": ["id", "type"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Address": {"description": "", "type": "object", "properties": {"city": {"type": "string", "description": "The name of the city, town, suburb, village or other community or delivery center."}, "country": {"type": "string", "description": "Country - a nation as commonly understood or generally accepted."}, "district": {"type": "string", "description": "The name of the administrative area (county)."}, "id": {"type": "string", "description": ""}, "line": {"type": "string", "description": "Street name, number, direction & P.O. Box etc."}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period when address was/is in use."}, "postalCode": {"type": "string", "description": "A postal code designating a region defined by the postal service."}, "state": {"type": "string", "description": "Sub-unit of country (abbreviations ok)"}, "text": {"type": "string", "description": "Text representation of the address"}, "type": {"type": "string", "description": "postal | physical | both"}, "use": {"type": "string", "description": "The purpose of this address."}}, "required": ["id"]}, "HumanName": {"description": "", "type": "object", "properties": {"family": {"type": "string", "description": "Family name (often called 'Surname')"}, "given": {"type": "string", "description": "Given name."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Indicates the period of time when this name was valid for the named person."}, "prefix": {"type": "string", "description": "Parts that come before the name"}, "suffix": {"type": "string", "description": "Parts that come after the name"}, "text": {"type": "string", "description": "Text representation of the full name"}, "use": {"type": "string", "description": "Identifies the purpose for this name."}}, "required": ["id"]}, "ContactPoint": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period when the contact point was/is in use."}, "rank": {"type": "number", "description": "Specify preferred order of use (1 = highest)"}, "system": {"type": "string", "description": "phone | fax | email | pager | url | sms | other"}, "use": {"type": "string", "description": "Identifies the purpose for the contact point."}, "value": {"type": "string", "description": "The actual contact point details"}}, "required": ["id"]}, "Quantity": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "A computer processable form of the unit in some unit representation system."}, "comparator": {"type": "string", "description": "< | <= | >= | > - how to understand the value"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "system": {"type": "string", "description": "The identification of the system that provides the coded form of the unit."}, "unit": {"type": "string", "description": "A human-readable form of the unit."}, "value": {"type": "number", "description": "Numerical value (with implicit precision)"}}, "required": ["id"]}, "Money": {"description": "", "type": "object", "properties": {"currency": {"type": "string", "description": "ISO 4217 Currency Code."}, "id": {"type": "string", "description": ""}, "value": {"type": "number", "description": "Numerical value (with implicit precision)."}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}