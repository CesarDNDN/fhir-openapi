{"paths": {"/EventDefinition/{id}/_history": {"get": {"tags": ["EventDefinition"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EventDefinition"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/EventDefinition/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["EventDefinition"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/EventDefinition"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["EventDefinition"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/EventDefinition"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["EventDefinition"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/EventDefinition": {"post": {"tags": ["EventDefinition"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/EventDefinition"}, "examples": {"eventdefinition-example.json": {"value": {"resourceType": "EventDefinition", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n    </div>"}, "status": "draft", "purpose": "Monitor all admissions to Emergency", "trigger": [{"type": "named-event", "name": "monitor-emergency-admissions", "data": [{"type": "Encounter"}], "condition": {"description": "Encounter Location = emergency (active/completed encounters, current or previous)", "language": "text/fhirpath", "expression": "(this | %previous).location.where(location = 'Location/emergency' and status in {'active', 'completed'}).exists()"}}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["EventDefinition"], "parameters": [{"name": "composed-of", "in": "query", "schema": {"type": "string"}, "description": "What resource is being referenced"}, {"name": "context", "in": "query", "schema": {"type": "string"}, "description": "A use context assigned to the event definition"}, {"name": "context-quantity", "in": "query", "schema": {"type": "integer"}, "description": "A quantity- or range-valued use context assigned to the event definition"}, {"name": "context-type", "in": "query", "schema": {"type": "string"}, "description": "A type of use context assigned to the event definition"}, {"name": "date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "The event definition publication date"}, {"name": "depends-on", "in": "query", "schema": {"type": "string"}, "description": "What resource is being referenced"}, {"name": "derived-from", "in": "query", "schema": {"type": "string"}, "description": "What resource is being referenced"}, {"name": "description", "in": "query", "schema": {"type": "string"}, "description": "The description of the event definition"}, {"name": "effective", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "The time during which the event definition is intended to be in use"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "External identifier for the event definition"}, {"name": "jurisdiction", "in": "query", "schema": {"type": "string"}, "description": "Intended jurisdiction for the event definition"}, {"name": "name", "in": "query", "schema": {"type": "string"}, "description": "Computationally friendly name of the event definition"}, {"name": "predecessor", "in": "query", "schema": {"type": "string"}, "description": "What resource is being referenced"}, {"name": "publisher", "in": "query", "schema": {"type": "string"}, "description": "Name of the publisher of the event definition"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "The current status of the event definition"}, {"name": "successor", "in": "query", "schema": {"type": "string"}, "description": "What resource is being referenced"}, {"name": "title", "in": "query", "schema": {"type": "string"}, "description": "The human-friendly name of the event definition"}, {"name": "topic", "in": "query", "schema": {"type": "string"}, "description": "Topics associated with the module"}, {"name": "url", "in": "query", "schema": {"type": "string"}, "description": "The uri that identifies the event definition"}, {"name": "version", "in": "query", "schema": {"type": "string"}, "description": "The business version of the event definition"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/EventDefinition"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/EventDefinition/{id}/_history/{vid}": {"get": {"tags": ["EventDefinition"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/EventDefinition"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "A description of when an event can occur", "title": "FHIR R4 EventDefinition Resource", "version": "unspecified"}, "tags": [{"name": "EventDefinition"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"EventDefinition": {"description": "A description of when an event can occur", "type": "object", "properties": {"approvalDate": {"type": "string", "description": "When the event definition was approved by publisher"}, "author": {"type": "array", "items": {"$ref": "#/components/schemas/ContactDetail"}, "description": "An individiual or organization primarily involved in the creation and maintenance of the content."}, "contact": {"type": "array", "items": {"$ref": "#/components/schemas/ContactDetail"}, "description": "Contact details to assist a user in finding and communicating with the publisher."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "copyright": {"type": "string", "description": "Use and/or publishing restrictions"}, "date": {"type": "string", "description": "Date last changed"}, "description": {"type": "string", "description": "A free text natural language description of the event definition from a consumer's perspective."}, "editor": {"type": "array", "items": {"$ref": "#/components/schemas/ContactDetail"}, "description": "An individual or organization primarily responsible for internal coherence of the content."}, "effectivePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "The period during which the event definition content was or is planned to be in active use."}, "endorser": {"type": "array", "items": {"$ref": "#/components/schemas/ContactDetail"}, "description": "Who endorsed the content"}, "experimental": {"type": "boolean", "description": "For testing purposes, not real usage"}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "Additional identifier for the event definition"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "jurisdiction": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "A legal or geographic region in which the event definition is intended to be used."}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "lastReviewDate": {"type": "string", "description": "When the event definition was last reviewed"}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "name": {"type": "string", "description": "Name for this event definition (computer friendly)"}, "publisher": {"type": "string", "description": "The name of the organization or individual that published the event definition."}, "purpose": {"type": "string", "description": "Explanation of why this event definition is needed and why it has been designed as it has."}, "relatedArtifact": {"type": "array", "items": {"$ref": "#/components/schemas/RelatedArtifact"}, "description": "Related resources such as additional documentation, justification, or bibliographic references."}, "reviewer": {"type": "array", "items": {"$ref": "#/components/schemas/ContactDetail"}, "description": "An individual or organization primarily responsible for review of some aspect of the content."}, "status": {"type": "string", "description": "The status of this event definition. Enables tracking the life-cycle of the content."}, "subject[x]": {"type": "string", "description": "A code or group definition that describes the intended subject of the event definition."}, "subjectCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "subjectReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "subtitle": {"type": "string", "description": "Subordinate title of the event definition"}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "title": {"type": "string", "description": "A short, descriptive, user-friendly title for the event definition."}, "topic": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "E.g. Education, Treatment, Assessment, etc."}, "trigger": {"type": "array", "items": {"$ref": "#/components/schemas/TriggerDefinition"}, "description": "\"when\" the event occurs (multiple = 'or')"}, "url": {"type": "string", "description": "Canonical identifier for this event definition, represented as a URI (globally unique)"}, "usage": {"type": "string", "description": "A detailed description of how the event definition is used from a clinical perspective."}, "useContext": {"type": "array", "items": {"$ref": "#/components/schemas/UsageContext"}, "description": "The context that the content is intended to support"}, "version": {"type": "string", "description": "Business version of the event definition"}}, "required": ["id", "status", "trigger"]}, "ContactDetail": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "name": {"type": "string", "description": "The name of an individual to contact."}, "telecom": {"type": "array", "items": {"$ref": "#/components/schemas/ContactPoint"}, "description": "The contact details for the individual (if a name was provided) or the organization."}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "RelatedArtifact": {"description": "", "type": "object", "properties": {"citation": {"type": "string", "description": "Bibliographic citation for the artifact"}, "display": {"type": "string", "description": "Brief description of the related artifact"}, "document": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": "What document is being referenced"}, "id": {"type": "string", "description": ""}, "label": {"type": "string", "description": "Short label"}, "resource": {"type": "string", "description": "The related resource, such as a library, value set, profile, or other knowledge resource."}, "type": {"type": "string", "description": "The type of relationship to the related artifact."}, "url": {"type": "string", "description": "A url for the artifact that can be followed to access the actual content."}}, "required": ["id", "type"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "TriggerDefinition": {"description": "", "type": "object", "properties": {"condition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": "Whether the event triggers (boolean expression)"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataRequirement"}, "description": "Triggering data of the event (multiple = 'and')"}, "id": {"type": "string", "description": ""}, "name": {"type": "string", "description": "Name or URI that identifies the event"}, "timing[x]": {"type": "string", "description": "The timing of the event (if this is a periodic trigger)."}, "timingDate": {"type": "string", "description": ""}, "timingDateTime": {"type": "string", "description": ""}, "timingReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "timingTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "type": {"type": "string", "description": "The type of triggering event."}}, "required": ["id", "type"]}, "UsageContext": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": "A code that identifies the type of context being specified by this usage context."}, "id": {"type": "string", "description": ""}, "value[x]": {"type": "string", "description": "Value that defines the context"}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}}, "required": ["id", "code", "value"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}