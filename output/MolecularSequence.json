{"paths": {"/MolecularSequence/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["MolecularSequence"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MolecularSequence"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["MolecularSequence"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MolecularSequence"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["MolecularSequence"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/MolecularSequence/{id}/_history": {"get": {"tags": ["MolecularSequence"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MolecularSequence"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/MolecularSequence/{id}/_history/{vid}": {"get": {"tags": ["MolecularSequence"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MolecularSequence"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/MolecularSequence": {"post": {"tags": ["MolecularSequence"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MolecularSequence"}, "examples": {"molecularsequence-example.json": {"value": {"resourceType": "MolecularSequence", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example</p><p><b>type</b>: dna</p><p><b>coordinateSystem</b>: 0</p><p><b>patient</b>: <a>Patient/example</a></p><h3>ReferenceSeqs</h3><table><tr><td>-</td><td><b>ReferenceSeqId</b></td><td><b>Strand</b></td><td><b>WindowStart</b></td><td><b>WindowEnd</b></td></tr><tr><td>*</td><td>NC_000009.11 <span>(Details : {http://www.ncbi.nlm.nih.gov/nuccore code 'NC_000009.11' = 'NC_000009.11)</span></td><td>watson</td><td>22125500</td><td>22125510</td></tr></table><h3>Variants</h3><table><tr><td>-</td><td><b>Start</b></td><td><b>End</b></td><td><b>ObservedAllele</b></td><td><b>ReferenceAllele</b></td></tr><tr><td>*</td><td>22125503</td><td>22125504</td><td>C</td><td>G</td></tr></table><h3>Repositories</h3><table><tr><td>-</td><td><b>Type</b></td><td><b>Url</b></td><td><b>Name</b></td><td><b>VariantsetId</b></td></tr><tr><td>*</td><td>openapi</td><td><a>http://grch37.rest.ensembl.org/ga4gh/variants/3:rs1333049?content-type=application/json</a></td><td>GA4GH API</td><td>3:rs1333049</td></tr></table></div>"}, "type": "dna", "coordinateSystem": 0, "patient": {"reference": "Patient/example"}, "referenceSeq": {"referenceSeqId": {"coding": [{"system": "http://www.ncbi.nlm.nih.gov/nuccore", "code": "NC_000009.11"}]}, "strand": "watson", "windowStart": 22125500, "windowEnd": 22125510}, "variant": [{"start": 22125503, "end": 22125504, "observedAllele": "C", "referenceAllele": "G"}], "repository": [{"type": "openapi", "url": "http://grch37.rest.ensembl.org/ga4gh/variants/3:rs1333049?content-type=application/json", "name": "GA4GH API", "variantsetId": "3:rs1333049"}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["MolecularSequence"], "parameters": [{"name": "chromosome", "in": "query", "schema": {"type": "string"}, "description": "Chromosome number of the reference sequence"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "The unique identity for a particular sequence"}, {"name": "patient", "in": "query", "schema": {"type": "string"}, "description": "The subject that the observation is about"}, {"name": "referenceseqid", "in": "query", "schema": {"type": "string"}, "description": "Reference Sequence of the sequence"}, {"name": "type", "in": "query", "schema": {"type": "string"}, "description": "Amino Acid Sequence/ DNA Sequence / RNA Sequence"}, {"name": "variant-end", "in": "query", "schema": {"type": "number"}, "description": "End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the variant."}, {"name": "variant-start", "in": "query", "schema": {"type": "number"}, "description": "Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the variant."}, {"name": "window-end", "in": "query", "schema": {"type": "number"}, "description": "End position (0-based exclusive, which menas the acid at this position will not be included, 1-based inclusive, which means the acid at this position will be included) of the reference sequence."}, {"name": "window-start", "in": "query", "schema": {"type": "number"}, "description": "Start position (0-based inclusive, 1-based inclusive, that means the nucleic acid or amino acid at this position will be included) of the reference sequence."}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MolecularSequence"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Information about a biological sequence", "title": "FHIR R4 MolecularSequence Resource", "version": "unspecified"}, "tags": [{"name": "MolecularSequence"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"MolecularSequence": {"description": "Information about a biological sequence", "type": "object", "properties": {"contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "coordinateSystem": {"type": "number", "description": "Base number of coordinate system (0 for 0-based numbering or coordinates, inclusive start, exclusive end, 1 for 1-based numbering, inclusive start, inclusive end)"}, "device": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The method for sequencing, for example, chip information."}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "A unique identifier for this particular sequence instance. This is a FHIR-defined id."}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "observedSeq": {"type": "string", "description": "Sequence that was observed"}, "patient": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The patient whose sequencing results are described by this resource."}, "performer": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The organization or lab that should be responsible for this result."}, "pointer": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "Pointer to next atomic sequence which at most contains one variant."}, "quality": {"type": "array", "items": {"$ref": "#/components/schemas/MolecularSequence.quality"}, "description": ""}, "quantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The number of copies of the sequence of interest. (RNASeq)."}, "readCoverage": {"type": "number", "description": "Average number of reads representing a given nucleotide in the reconstructed sequence"}, "referenceSeq": {"type": "object", "allOf": [{"$ref": "#/components/schemas/MolecularSequence.referenceSeq"}], "description": ""}, "repository": {"type": "array", "items": {"$ref": "#/components/schemas/MolecularSequence.repository"}, "description": ""}, "specimen": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Specimen used for sequencing."}, "structureVariant": {"type": "array", "items": {"$ref": "#/components/schemas/MolecularSequence.structureVariant"}, "description": ""}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "type": {"type": "string", "description": "Amino Acid Sequence/ DNA Sequence / RNA Sequence."}, "variant": {"type": "array", "items": {"$ref": "#/components/schemas/MolecularSequence.variant"}, "description": ""}}, "required": ["id", "coordinateSystem"]}, "MolecularSequence.quality": {"description": "", "type": "object", "properties": {"end": {"type": "number", "description": "End position of the sequence"}, "fScore": {"type": "number", "description": "F-score"}, "gtFP": {"type": "number", "description": "False positives where the non-REF alleles in the Truth and Query Call Sets match"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "method": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Method to get quality"}, "precision": {"type": "number", "description": "Precision of comparison"}, "queryFP": {"type": "number", "description": "False positives"}, "queryTP": {"type": "number", "description": "True positives from the perspective of the query data"}, "recall": {"type": "number", "description": "Recall of comparison"}, "roc": {"type": "object", "allOf": [{"$ref": "#/components/schemas/MolecularSequence.quality.roc"}], "description": "Receiver Operator Characteristic (ROC) Curve"}, "score": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "Quality score for the comparison"}, "standardSequence": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Standard sequence for comparison"}, "start": {"type": "number", "description": "Start position of the sequence"}, "truthFN": {"type": "number", "description": "False negatives"}, "truthTP": {"type": "number", "description": "True positives from the perspective of the truth data"}, "type": {"type": "string", "description": "indel | snp | unknown"}}, "required": ["id", "type"]}, "MolecularSequence.quality.roc": {"description": "", "type": "object", "properties": {"fMeasure": {"type": "number", "description": "FScore of the GQ score"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "numFN": {"type": "number", "description": "Roc score false negative numbers"}, "numFP": {"type": "number", "description": "Roc score false positive numbers"}, "numTP": {"type": "number", "description": "Roc score true positive numbers"}, "precision": {"type": "number", "description": "Precision of the GQ score"}, "score": {"type": "number", "description": "Genotype quality score"}, "sensitivity": {"type": "number", "description": "Sensitivity of the GQ score"}}, "required": ["id"]}, "MolecularSequence.referenceSeq": {"description": "", "type": "object", "properties": {"chromosome": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Chromosome containing genetic finding"}, "genomeBuild": {"type": "string", "description": "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "orientation": {"type": "string", "description": "sense | antisense"}, "referenceSeqId": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Reference identifier"}, "referenceSeqPointer": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "A pointer to another MolecularSequence entity as reference sequence"}, "referenceSeqString": {"type": "string", "description": "A string to represent reference sequence"}, "strand": {"type": "string", "description": "watson | crick"}, "windowEnd": {"type": "number", "description": "End position of the window on the reference sequence"}, "windowStart": {"type": "number", "description": "Start position of the window on the  reference sequence"}}, "required": ["id"]}, "MolecularSequence.repository": {"description": "", "type": "object", "properties": {"datasetId": {"type": "string", "description": "Id of the dataset that used to call for dataset in repository"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "name": {"type": "string", "description": "Repository's name"}, "readsetId": {"type": "string", "description": "Id of the read"}, "type": {"type": "string", "description": "directlink | openapi | login | oauth | other"}, "url": {"type": "string", "description": "URI of the repository"}, "variantsetId": {"type": "string", "description": "Id of the variantset that used to call for variantset in repository"}}, "required": ["id", "type"]}, "MolecularSequence.structureVariant": {"description": "", "type": "object", "properties": {"exact": {"type": "boolean", "description": "Does the structural variant have base pair resolution breakpoints?"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "inner": {"type": "object", "allOf": [{"$ref": "#/components/schemas/MolecularSequence.structureVariant.inner"}], "description": "Structural variant inner"}, "length": {"type": "number", "description": "Structural variant length"}, "outer": {"type": "object", "allOf": [{"$ref": "#/components/schemas/MolecularSequence.structureVariant.outer"}], "description": "Structural variant outer"}, "variantType": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Structural variant change type"}}, "required": ["id"]}, "MolecularSequence.structureVariant.inner": {"description": "", "type": "object", "properties": {"end": {"type": "number", "description": "Structural variant inner end"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "start": {"type": "number", "description": "Structural variant inner start"}}, "required": ["id"]}, "MolecularSequence.structureVariant.outer": {"description": "", "type": "object", "properties": {"end": {"type": "number", "description": "Structural variant outer end"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "start": {"type": "number", "description": "Structural variant outer start"}}, "required": ["id"]}, "MolecularSequence.variant": {"description": "", "type": "object", "properties": {"cigar": {"type": "string", "description": "Extended CIGAR string for aligning the sequence with reference bases"}, "end": {"type": "number", "description": "End position of the variant on the reference sequence"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "observedAllele": {"type": "string", "description": "Allele that was observed"}, "referenceAllele": {"type": "string", "description": "Allele in the reference sequence"}, "start": {"type": "number", "description": "Start position of the variant on the  reference sequence"}, "variantPointer": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Pointer to observed variant information"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Quantity": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "A computer processable form of the unit in some unit representation system."}, "comparator": {"type": "string", "description": "< | <= | >= | > - how to understand the value"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "system": {"type": "string", "description": "The identification of the system that provides the coded form of the unit."}, "unit": {"type": "string", "description": "A human-readable form of the unit."}, "value": {"type": "number", "description": "Numerical value (with implicit precision)"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}