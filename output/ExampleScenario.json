{"paths": {"/ExampleScenario/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["ExampleScenario"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ExampleScenario"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["ExampleScenario"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ExampleScenario"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["ExampleScenario"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/ExampleScenario/{id}/_history": {"get": {"tags": ["ExampleScenario"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/ExampleScenario": {"post": {"tags": ["ExampleScenario"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ExampleScenario"}, "examples": {"examplescenario-example.json": {"value": {"resourceType": "ExampleScenario", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example</p><p><b>status</b>: draft</p><p><b>purpose</b>: Purpose: this serves to enable remote performing of medication administration, by using remote / mobile devices to a) Get the planned medication administrations and b) Record the performing of these administrations without a permanent connection to the EHR.</p><blockquote><p><b>actor</b></p><p><b>actorId</b>: Nurse</p><p><b>type</b>: person</p><p><b>name</b>: Nurse</p><p><b>description</b>: The Nurse</p></blockquote><blockquote><p><b>actor</b></p><p><b>actorId</b>: MAP</p><p><b>type</b>: entity</p><p><b>name</b>: Nurse's Tablet</p><p><b>description</b>: The entity that receives the Administration Requests to show the nurse to perform them</p></blockquote><blockquote><p><b>actor</b></p><p><b>actorId</b>: OP</p><p><b>type</b>: entity</p><p><b>name</b>: MAR / Scheduler</p><p><b>description</b>: The Medication Administration Order Placer</p></blockquote><blockquote><p><b>actor</b></p><p><b>actorId</b>: MAC</p><p><b>type</b>: entity</p><p><b>name</b>: MAR / EHR</p><p><b>description</b>: The entity that receives the Medication Administration reports</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iherx001</p><p><b>resourceType</b>: MedicationRequest</p><p><b>name</b>: Initial Prescription</p><p><b>description</b>: The initial prescription which describes &quot;medication X, 3 times per day&quot; - the exact scheduling is not   in the initial prescription (it is left for the care teams to decide on the schedule).</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iherx001.001</p><p><b>resourceType</b>: MedicationRequest</p><p><b>name</b>: Request for day 1, morning</p><p><b>description</b>: The administration request for day 1, morning</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iherx001.002</p><p><b>resourceType</b>: MedicationRequest</p><p><b>name</b>: Request for day 1, lunch</p><p><b>description</b>: The administration request for day 1, lunch</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iherx001.003</p><p><b>resourceType</b>: MedicationRequest</p><p><b>name</b>: Request for day 1, evening</p><p><b>description</b>: The administration request for day 1, evening</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iherx001.004</p><p><b>resourceType</b>: MedicationRequest</p><p><b>name</b>: Request for day 2, morning</p><p><b>description</b>: The administration request for day 2, morning</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iherx001.005</p><p><b>resourceType</b>: MedicationRequest</p><p><b>name</b>: Request for day 2, lunch</p><p><b>description</b>: The administration request for day 2, lunch</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iherx001.006</p><p><b>resourceType</b>: MedicationRequest</p><p><b>name</b>: Request for day 2, evening</p><p><b>description</b>: The administration request for day 2, evening</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iheadm001a</p><p><b>resourceType</b>: MedicationAdministration</p><p><b>name</b>: Morning meds - taken</p><p><b>description</b>: Administration report for day 1, morning: Taken</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iheadm001b</p><p><b>resourceType</b>: MedicationAdministration</p><p><b>name</b>: Morning meds - not taken</p><p><b>description</b>: Administration report for day 1, morning: NOT Taken</p></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iherx001bundle</p><p><b>resourceType</b>: MedicationRequest</p><p><b>name</b>: Bundle of Medication Requests</p><p><b>description</b>: All the medication Requests for Day 1</p><blockquote><p><b>containedInstance</b></p><p><b>resourceId</b>: iherx001.001</p></blockquote><blockquote><p><b>containedInstance</b></p><p><b>resourceId</b>: iherx001.002</p></blockquote><blockquote><p><b>containedInstance</b></p><p><b>resourceId</b>: iherx001.003</p></blockquote><blockquote><p><b>containedInstance</b></p><p><b>resourceId</b>: iherx001.004</p></blockquote><blockquote><p><b>containedInstance</b></p><p><b>resourceId</b>: iherx001.005</p></blockquote><blockquote><p><b>containedInstance</b></p><p><b>resourceId</b>: iherx001.006</p></blockquote></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iheadm002</p><p><b>resourceType</b>: MedicationAdministration</p><p><b>name</b>: Lunch meds - taken</p><p><b>description</b>: Administration report for day 1, lunch: Taken</p><blockquote><p><b>version</b></p><p><b>versionId</b>: iheadm002v1</p><p><b>description</b>: Medication just taken</p></blockquote><blockquote><p><b>version</b></p><p><b>versionId</b>: iheadm002v2</p><p><b>description</b>: Medication rejected</p></blockquote></blockquote><blockquote><p><b>instance</b></p><p><b>resourceId</b>: iherxqry</p><p><b>resourceType</b>: SearchParameter</p><p><b>name</b>: Search query1</p><p><b>description</b>: The search administration request for day 1, morning</p></blockquote><blockquote><p><b>process</b></p><p><b>title</b>: Mobile Medication Administration</p><p><b>description</b>: This scenario demonstrates the process of getting the relevant medication instructions for a patient visit and reporting the results of administration. The scenario is as follows: After the prescription is issued, the institution schedules each individual administration event in the Medication Administration Record (MAR). When preparing for a visit, the nurse queries the MAR for the scheduled administrations, obtaining a bundle of records. The nurse then performs the care activities and registers the results in the device. Upon synchronization of the device and the institution, the results of administration are uploaded to the EHR, thus updating the MAR.</p><p><b>preConditions</b>: Medication administration requests are in the EHR / MAR, scheduled for each individual intake.</p><p><b>postConditions</b>: Medication administration Reports are submitted, EHR is updated.</p><blockquote><p><b>step</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Number</b></td><td><b>Name</b></td><td><b>Initiator</b></td><td><b>Receiver</b></td></tr><tr><td>*</td><td>1</td><td>1. Get today's schedule</td><td>Nurse</td><td>MAP</td></tr></table></blockquote><blockquote><p><b>step</b></p><h3>Processes</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>step</b></p><p><b>pause</b>: true</p></blockquote><blockquote><p><b>step</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Number</b></td><td><b>Name</b></td><td><b>Initiator</b></td><td><b>Receiver</b></td></tr><tr><td>*</td><td>4</td><td>Notify (alert)</td><td>MAP</td><td>Nurse</td></tr></table></blockquote><blockquote><p><b>step</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Number</b></td><td><b>Name</b></td><td><b>Initiator</b></td><td><b>Receiver</b></td></tr><tr><td>*</td><td>5</td><td>Read orders</td><td>Nurse</td><td>MAP</td></tr></table></blockquote><blockquote><p><b>step</b></p><p><b>pause</b>: true</p></blockquote><blockquote><p><b>step</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Number</b></td><td><b>Name</b></td><td><b>Initiator</b></td><td><b>Receiver</b></td></tr><tr><td>*</td><td>5</td><td>Ask if patient took meds</td><td>Nurse</td><td>Nurse</td></tr></table></blockquote><blockquote><p><b>step</b></p><blockquote><p><b>alternative</b></p><p><b>title</b>: Patient took drugs</p><p><b>description</b>: Invoke if patient took medications</p><h3>Steps</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>alternative</b></p><p><b>title</b>: No drugs</p><p><b>description</b>: No, patient did not take drugs</p><h3>Steps</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>alternative</b></p><p><b>title</b>: Not clear</p><p><b>description</b>: Unknown whether patient took medications or not</p><h3>Steps</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></blockquote><blockquote><p><b>step</b></p><p><b>pause</b>: true</p></blockquote><blockquote><p><b>step</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Number</b></td><td><b>Name</b></td><td><b>Initiator</b></td><td><b>Receiver</b></td></tr><tr><td>*</td><td>6</td><td>Administer drug</td><td>Nurse</td><td>Nurse</td></tr></table></blockquote><blockquote><p><b>step</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Number</b></td><td><b>Name</b></td><td><b>Initiator</b></td><td><b>Receiver</b></td><td><b>InitiatorActive</b></td></tr><tr><td>*</td><td>7</td><td>Register administration</td><td>Nurse</td><td>MAP</td><td>true</td></tr></table></blockquote><blockquote><p><b>step</b></p><p><b>pause</b>: true</p></blockquote><blockquote><p><b>step</b></p><h3>Processes</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>step</b></p><p><b>pause</b>: true</p></blockquote><blockquote><p><b>step</b></p><h3>Processes</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></blockquote></div>"}, "status": "draft", "purpose": "Purpose: this serves to enable remote performing of medication administration, by using remote / mobile devices to a) Get the planned medication administrations and b) Record the performing of these administrations without a permanent connection to the EHR.", "actor": [{"actorId": "Nurse", "type": "person", "name": "Nurse", "description": "The Nurse"}, {"actorId": "MAP", "type": "entity", "name": "Nurse's Tablet", "description": "The entity that receives the Administration Requests to show the nurse to perform them"}, {"actorId": "OP", "type": "entity", "name": "MAR / Scheduler", "description": "The Medication Administration Order Placer"}, {"actorId": "MAC", "type": "entity", "name": "MAR / EHR", "description": "The entity that receives the Medication Administration reports"}], "instance": [{"resourceId": "iherx001", "resourceType": "MedicationRequest", "name": "Initial Prescription", "description": "The initial prescription which describes \"medication X, 3 times per day\" - the exact scheduling is not   in the initial prescription (it is left for the care teams to decide on the schedule)."}, {"resourceId": "iherx001.001", "resourceType": "MedicationRequest", "name": "Request for day 1, morning", "description": "The administration request for day 1, morning"}, {"resourceId": "iherx001.002", "resourceType": "MedicationRequest", "name": "Request for day 1, lunch", "description": "The administration request for day 1, lunch"}, {"resourceId": "iherx001.003", "resourceType": "MedicationRequest", "name": "Request for day 1, evening", "description": "The administration request for day 1, evening"}, {"resourceId": "iherx001.004", "resourceType": "MedicationRequest", "name": "Request for day 2, morning", "description": "The administration request for day 2, morning"}, {"resourceId": "iherx001.005", "resourceType": "MedicationRequest", "name": "Request for day 2, lunch", "description": "The administration request for day 2, lunch"}, {"resourceId": "iherx001.006", "resourceType": "MedicationRequest", "name": "Request for day 2, evening", "description": "The administration request for day 2, evening"}, {"resourceId": "iheadm001a", "resourceType": "MedicationAdministration", "name": "Morning meds - taken", "description": "Administration report for day 1, morning: Taken"}, {"resourceId": "iheadm001b", "resourceType": "MedicationAdministration", "name": "Morning meds - not taken", "description": "Administration report for day 1, morning: NOT Taken"}, {"resourceId": "iherx001bundle", "resourceType": "MedicationRequest", "name": "Bundle of Medication Requests", "description": "All the medication Requests for Day 1", "containedInstance": [{"resourceId": "iherx001.001"}, {"resourceId": "iherx001.002"}, {"resourceId": "iherx001.003"}, {"resourceId": "iherx001.004"}, {"resourceId": "iherx001.005"}, {"resourceId": "iherx001.006"}]}, {"resourceId": "iheadm002", "resourceType": "MedicationAdministration", "name": "Lunch meds - taken", "description": "Administration report for day 1, lunch: Taken", "version": [{"versionId": "iheadm002v1", "description": "Medication just taken"}, {"versionId": "iheadm002v2", "description": "Medication rejected"}]}, {"resourceId": "iherxqry", "resourceType": "SearchParameter", "name": "Search query1", "description": "The search administration request for day 1, morning"}], "process": [{"title": "Mobile Medication Administration", "description": "This scenario demonstrates the process of getting the relevant medication instructions for a patient visit and reporting the results of administration. The scenario is as follows: After the prescription is issued, the institution schedules each individual administration event in the Medication Administration Record (MAR). When preparing for a visit, the nurse queries the MAR for the scheduled administrations, obtaining a bundle of records. The nurse then performs the care activities and registers the results in the device. Upon synchronization of the device and the institution, the results of administration are uploaded to the EHR, thus updating the MAR.", "preConditions": "Medication administration requests are in the EHR / MAR, scheduled for each individual intake.", "postConditions": "Medication administration Reports are submitted, EHR is updated.", "step": [{"operation": {"number": "1", "name": "1. Get today's schedule", "initiator": "Nurse", "receiver": "MAP"}}, {"process": [{"title": "P1. Query Administration Requests", "description": "Query for medication administration orders,\\n- For today's shifts\\n- For today's patients", "step": [{"operation": {"number": "2", "name": "2.Query for medication administration orders,\\n- For today's shifts\\n- For today's patients", "initiator": "MAP", "receiver": "OP", "request": {"resourceId": "iherxqry"}, "response": {"resourceId": "iherx001bundle"}}}]}]}, {"pause": true}, {"operation": {"number": "4", "name": "Notify (alert)", "initiator": "MAP", "receiver": "Nurse"}}, {"operation": {"number": "5", "name": "Read orders", "initiator": "Nurse", "receiver": "MAP"}}, {"pause": true}, {"operation": {"number": "5", "name": "Ask if patient took meds", "initiator": "Nurse", "receiver": "Nurse"}}, {"alternative": [{"title": "Patient took drugs", "description": "Invoke if patient took medications", "step": [{"process": [{"title": "Register Meds taken", "step": [{"operation": {"number": "1a", "name": "Register Meds taken", "initiator": "Nurse", "receiver": "MAP", "initiatorActive": true}}]}]}]}, {"title": "No drugs", "description": "No, patient did not take drugs", "step": [{"process": [{"title": "Register Meds NOT taken", "step": [{"operation": {"number": "1b", "name": "Register Meds NOT taken", "initiator": "Nurse", "receiver": "MAP", "initiatorActive": true}}]}]}]}, {"title": "Not clear", "description": "Unknown whether patient took medications or not", "step": [{"pause": true}]}]}, {"pause": true}, {"operation": {"number": "6", "name": "Administer drug", "initiator": "Nurse", "receiver": "Nurse"}}, {"operation": {"number": "7", "name": "Register administration", "initiator": "Nurse", "receiver": "MAP", "initiatorActive": true}}, {"pause": true}, {"process": [{"title": "P2. Update administration reports", "step": [{"operation": {"number": "8", "name": "Nurse updates administration report", "initiator": "Nurse", "receiver": "MAP", "initiatorActive": true, "request": {"resourceId": "iheadm002"}}}]}]}, {"pause": true}, {"process": [{"title": "P3. Upload administration reports", "description": "The nurse's system uploads the administration results to the server", "step": [{"operation": {"number": "9", "name": "Refresh", "initiator": "MAP", "receiver": "MAC", "request": {"resourceId": "iheadm001"}}}]}]}]}], "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["ExampleScenario"], "parameters": [{"name": "context", "in": "query", "schema": {"type": "string"}, "description": "A use context assigned to the example scenario"}, {"name": "context-quantity", "in": "query", "schema": {"type": "integer"}, "description": "A quantity- or range-valued use context assigned to the example scenario"}, {"name": "context-type", "in": "query", "schema": {"type": "string"}, "description": "A type of use context assigned to the example scenario"}, {"name": "date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "The example scenario publication date"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "External identifier for the example scenario"}, {"name": "jurisdiction", "in": "query", "schema": {"type": "string"}, "description": "Intended jurisdiction for the example scenario"}, {"name": "name", "in": "query", "schema": {"type": "string"}, "description": "Computationally friendly name of the example scenario"}, {"name": "publisher", "in": "query", "schema": {"type": "string"}, "description": "Name of the publisher of the example scenario"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "The current status of the example scenario"}, {"name": "url", "in": "query", "schema": {"type": "string"}, "description": "The uri that identifies the example scenario"}, {"name": "version", "in": "query", "schema": {"type": "string"}, "description": "The business version of the example scenario"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ExampleScenario"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/ExampleScenario/{id}/_history/{vid}": {"get": {"tags": ["ExampleScenario"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/ExampleScenario"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Example of workflow instance", "title": "FHIR R4 ExampleScenario Resource", "version": "unspecified"}, "tags": [{"name": "ExampleScenario"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"ExampleScenario": {"description": "Example of workflow instance", "type": "object", "properties": {"actor": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario.actor"}, "description": ""}, "contact": {"type": "array", "items": {"$ref": "#/components/schemas/ContactDetail"}, "description": "Contact details to assist a user in finding and communicating with the publisher."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "copyright": {"type": "string", "description": "Use and/or publishing restrictions"}, "date": {"type": "string", "description": "Date last changed"}, "experimental": {"type": "boolean", "description": "For testing purposes, not real usage"}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "Additional identifier for the example scenario"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "instance": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario.instance"}, "description": ""}, "jurisdiction": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "A legal or geographic region in which the example scenario is intended to be used."}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "name": {"type": "string", "description": "Name for this example scenario (computer friendly)"}, "process": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario.process"}, "description": ""}, "publisher": {"type": "string", "description": "The name of the organization or individual that published the example scenario."}, "purpose": {"type": "string", "description": "The purpose of the example, e.g. to illustrate a scenario"}, "status": {"type": "string", "description": "The status of this example scenario. Enables tracking the life-cycle of the content."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "url": {"type": "string", "description": "Canonical identifier for this example scenario, represented as a URI (globally unique)"}, "useContext": {"type": "array", "items": {"$ref": "#/components/schemas/UsageContext"}, "description": "The context that the content is intended to support"}, "version": {"type": "string", "description": "Business version of the example scenario"}, "workflow": {"type": "string", "description": "Another nested workflow."}}, "required": ["id", "status"]}, "ExampleScenario.actor": {"description": "", "type": "object", "properties": {"actorId": {"type": "string", "description": "ID or acronym of the actor"}, "description": {"type": "string", "description": "The description of the actor"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "name": {"type": "string", "description": "The name of the actor as shown in the page"}, "type": {"type": "string", "description": "person | entity"}}, "required": ["id", "actorId", "type"]}, "ExampleScenario.instance": {"description": "", "type": "object", "properties": {"containedInstance": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario.instance.containedInstance"}, "description": "Resources contained in the instance"}, "description": {"type": "string", "description": "Human-friendly description of the resource instance"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "name": {"type": "string", "description": "A short name for the resource instance"}, "resourceId": {"type": "string", "description": "The id of the resource for referencing"}, "resourceType": {"type": "string", "description": "The type of the resource"}, "version": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario.instance.version"}, "description": "A specific version of the resource"}}, "required": ["id", "resourceId", "resourceType"]}, "ExampleScenario.instance.containedInstance": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "resourceId": {"type": "string", "description": "Each resource contained in the instance"}, "versionId": {"type": "string", "description": "A specific version of a resource contained in the instance"}}, "required": ["id", "resourceId"]}, "ExampleScenario.instance.version": {"description": "", "type": "object", "properties": {"description": {"type": "string", "description": "The description of the resource version"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "versionId": {"type": "string", "description": "The identifier of a specific version of a resource"}}, "required": ["id", "description", "versionId"]}, "ExampleScenario.process": {"description": "", "type": "object", "properties": {"description": {"type": "string", "description": "A longer description of the group of operations"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "postConditions": {"type": "string", "description": "Description of final status after the process ends"}, "preConditions": {"type": "string", "description": "Description of initial status before the process starts"}, "step": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario.process.step"}, "description": "Each step of the process"}, "title": {"type": "string", "description": "The diagram title of the group of operations"}}, "required": ["id", "title"]}, "ExampleScenario.process.step": {"description": "", "type": "object", "properties": {"alternative": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario.process.step.alternative"}, "description": "Alternate non-typical step action"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "operation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ExampleScenario.process.step.operation"}], "description": "Each interaction or action"}, "pause": {"type": "boolean", "description": "If there is a pause in the flow"}, "process": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario.process"}, "description": "Nested process"}}, "required": ["id"]}, "ExampleScenario.process.step.alternative": {"description": "", "type": "object", "properties": {"description": {"type": "string", "description": "A human-readable description of each option"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "step": {"type": "array", "items": {"$ref": "#/components/schemas/ExampleScenario.process.step"}, "description": "What happens in each alternative option"}, "title": {"type": "string", "description": "Label for alternative"}}, "required": ["id", "title"]}, "ExampleScenario.process.step.operation": {"description": "", "type": "object", "properties": {"description": {"type": "string", "description": "A comment to be inserted in the diagram"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "initiator": {"type": "string", "description": "Who starts the transaction"}, "initiatorActive": {"type": "boolean", "description": "Whether the initiator is deactivated right after the transaction"}, "name": {"type": "string", "description": "The human-friendly name of the interaction"}, "number": {"type": "string", "description": "The sequential number of the interaction"}, "receiver": {"type": "string", "description": "Who receives the transaction"}, "receiverActive": {"type": "boolean", "description": "Whether the receiver is deactivated right after the transaction"}, "request": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ExampleScenario.instance.containedInstance"}], "description": "Each resource instance used by the initiator"}, "response": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ExampleScenario.instance.containedInstance"}], "description": "Each resource instance used by the responder"}, "type": {"type": "string", "description": "The type of operation - CRUD"}}, "required": ["id", "number"]}, "ContactDetail": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "name": {"type": "string", "description": "The name of an individual to contact."}, "telecom": {"type": "array", "items": {"$ref": "#/components/schemas/ContactPoint"}, "description": "The contact details for the individual (if a name was provided) or the organization."}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "UsageContext": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": "A code that identifies the type of context being specified by this usage context."}, "id": {"type": "string", "description": ""}, "value[x]": {"type": "string", "description": "Value that defines the context"}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}}, "required": ["id", "code", "value"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}