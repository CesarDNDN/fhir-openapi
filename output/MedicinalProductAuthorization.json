{"paths": {"/MedicinalProductAuthorization/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["MedicinalProductAuthorization"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MedicinalProductAuthorization"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["MedicinalProductAuthorization"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MedicinalProductAuthorization"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["MedicinalProductAuthorization"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/MedicinalProductAuthorization/{id}/_history": {"get": {"tags": ["MedicinalProductAuthorization"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MedicinalProductAuthorization"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/MedicinalProductAuthorization": {"post": {"tags": ["MedicinalProductAuthorization"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MedicinalProductAuthorization"}, "examples": {"medicinalproductauthorization-example.json": {"value": {"resourceType": "MedicinalProductAuthorization", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example</p><p><b>identifier</b>: EU/1/11/999/001</p><p><b>country</b>: EU <span>(Details : {http://ema.europa.eu/example/country code 'EU' = 'EU)</span></p><p><b>status</b>: active <span>(Details : {http://ema.europa.eu/example/authorisationstatus code 'active' = 'active)</span></p><p><b>statusDate</b>: 14/01/2015</p><p><b>validityPeriod</b>: 16/08/2015 --&gt; 20/05/2020</p><p><b>dataExclusivityPeriod</b>: 15/08/2010 --&gt; 15/08/2020</p><p><b>dateOfFirstAuthorization</b>: 15/08/2010</p><p><b>internationalBirthDate</b>: 15/08/2010</p><blockquote><p><b>jurisdictionalAuthorization</b></p><p><b>identifier</b>: 123-456-789</p><p><b>country</b>: NO <span>(Details : {http://ema.europa.eu/example/countryCode code 'NO' = 'NO)</span></p></blockquote><blockquote><p><b>jurisdictionalAuthorization</b></p><p><b>identifier</b>: 123-456-123</p><p><b>country</b>: NO <span>(Details : {http://ema.europa.eu/example/countryCode code 'NO' = 'NO)</span></p></blockquote><p><b>holder</b>: <a>Organization/example</a></p><p><b>regulator</b>: <a>Organization/example</a></p><blockquote><p><b>procedure</b></p><p><b>identifier</b>: EMEA/H/C/009999/IA/0099/G</p><p><b>type</b>: VariationTypeIA <span>(Details : {http://ema.europa.eu/example/marketingAuthorisationProcedureType code 'VariationTypeIA' = 'VariationTypeIA)</span></p><p><b>date</b>: 02/08/2015 --&gt; 21/08/2015</p><h3>Applications</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></div>"}, "identifier": [{"system": "http://ema.europa.eu/example/marketingAuthorisationNumber", "value": "EU/1/11/999/001"}], "country": [{"coding": [{"system": "http://ema.europa.eu/example/country", "code": "EU"}]}], "status": {"coding": [{"system": "http://ema.europa.eu/example/authorisationstatus", "code": "active"}]}, "statusDate": "2015-01-14", "validityPeriod": {"start": "2015-08-16", "end": "2020-05-20"}, "dataExclusivityPeriod": {"start": "2010-08-15", "end": "2020-08-15"}, "dateOfFirstAuthorization": "2010-08-15", "internationalBirthDate": "2010-08-15", "jurisdictionalAuthorization": [{"id": "1", "identifier": [{"system": "http://ema.europa.eu/example/marketingauthorisationnumber", "value": "123-456-789"}], "country": {"coding": [{"system": "http://ema.europa.eu/example/countryCode", "code": "NO"}]}}, {"id": "2", "identifier": [{"system": "http://ema.europa.eu/example/marketingauthorisationnumber", "value": "123-456-123"}], "country": {"coding": [{"system": "http://ema.europa.eu/example/countryCode", "code": "NO"}]}}], "holder": {"reference": "Organization/example"}, "regulator": {"reference": "Organization/example"}, "procedure": {"identifier": {"system": "http://ema.europa.eu/example/procedureidentifier-number", "value": "EMEA/H/C/009999/IA/0099/G"}, "type": {"coding": [{"system": "http://ema.europa.eu/example/marketingAuthorisationProcedureType", "code": "VariationTypeIA"}]}, "datePeriod": {"start": "2015-08-02", "end": "2015-08-21"}, "application": [{"identifier": {"system": "http://ema.europa.eu/example/applicationidentifier-number", "value": "IA38G"}, "type": {"coding": [{"system": "http://ema.europa.eu/example/marketingAuthorisationApplicationType", "code": "GroupTypeIAVariationNotification"}]}, "dateDateTime": "2015-08-01"}]}, "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["MedicinalProductAuthorization"], "parameters": [{"name": "country", "in": "query", "schema": {"type": "string"}, "description": "The country in which the marketing authorization has been granted"}, {"name": "holder", "in": "query", "schema": {"type": "string"}, "description": "Marketing Authorization Holder"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "Business identifier for the marketing authorization, as assigned by a regulator"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "The status of the marketing authorization"}, {"name": "subject", "in": "query", "schema": {"type": "string"}, "description": "The medicinal product that is being authorized"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MedicinalProductAuthorization"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/MedicinalProductAuthorization/{id}/_history/{vid}": {"get": {"tags": ["MedicinalProductAuthorization"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/MedicinalProductAuthorization"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "The regulatory authorization of a medicinal product", "title": "FHIR R4 MedicinalProductAuthorization Resource", "version": "unspecified"}, "tags": [{"name": "MedicinalProductAuthorization"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"MedicinalProductAuthorization": {"description": "The regulatory authorization of a medicinal product", "type": "object", "properties": {"contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "country": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "The country in which the marketing authorization has been granted."}, "dataExclusivityPeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "A period of time after authorization before generic product applicatiosn can be submitted."}, "dateOfFirstAuthorization": {"type": "string", "description": "The date when the first authorization was granted by a Medicines Regulatory Agency."}, "holder": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Marketing Authorization Holder."}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "Business identifier for the marketing authorization, as assigned by a regulator."}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "internationalBirthDate": {"type": "string", "description": "Date of first marketing authorization for a company's new medicinal product in any country in the World"}, "jurisdiction": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Jurisdiction within a country."}, "jurisdictionalAuthorization": {"type": "array", "items": {"$ref": "#/components/schemas/MedicinalProductAuthorization.jurisdictionalAuthorization"}, "description": ""}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "legalBasis": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The legal framework against which this authorization is granted."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "procedure": {"type": "object", "allOf": [{"$ref": "#/components/schemas/MedicinalProductAuthorization.procedure"}], "description": ""}, "regulator": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Medicines Regulatory Agency."}, "restoreDate": {"type": "string", "description": "The date when a suspended the marketing or the marketing authorization of the product is anticipated to be restored"}, "status": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The status of the marketing authorization."}, "statusDate": {"type": "string", "description": "The date at which the given status has become applicable."}, "subject": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The medicinal product that is being authorized."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "validityPeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "The beginning of the time period in which the marketing authorization is in the specific status shall be specified A complete date consisting of day, month and year shall be specified using the ISO 8601 date format"}}, "required": ["id"]}, "MedicinalProductAuthorization.jurisdictionalAuthorization": {"description": "", "type": "object", "properties": {"country": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Country of authorization"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "The assigned number for the marketing authorization"}, "jurisdiction": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Jurisdiction within a country"}, "legalStatusOfSupply": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The legal status of supply in a jurisdiction or region"}, "validityPeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "The start and expected end date of the authorization"}}, "required": ["id"]}, "MedicinalProductAuthorization.procedure": {"description": "", "type": "object", "properties": {"application": {"type": "array", "items": {"$ref": "#/components/schemas/MedicinalProductAuthorization.procedure"}, "description": "Applcations submitted to obtain a marketing authorization"}, "date[x]": {"type": "string", "description": "Date of procedure"}, "dateDateTime": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "datePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Identifier for this procedure"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Type of procedure"}}, "required": ["id", "type"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}