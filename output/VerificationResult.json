{"paths": {"/VerificationResult/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["VerificationResult"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/VerificationResult"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["VerificationResult"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/VerificationResult"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["VerificationResult"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/VerificationResult": {"post": {"tags": ["VerificationResult"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/VerificationResult"}, "examples": {"verificationresult-example.json": {"value": {"resourceType": "VerificationResult", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example</p><p><b>status</b>: attested</p></div>"}, "status": "attested", "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["VerificationResult"], "parameters": [{"name": "target", "in": "query", "schema": {"type": "string"}, "description": "A resource that was validated"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/VerificationResult"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/VerificationResult/{id}/_history/{vid}": {"get": {"tags": ["VerificationResult"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/VerificationResult"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/VerificationResult/{id}/_history": {"get": {"tags": ["VerificationResult"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/VerificationResult"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Describes validation requirements, source(s), status and dates for one or more elements", "title": "FHIR R4 VerificationResult Resource", "version": "unspecified"}, "tags": [{"name": "VerificationResult"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"VerificationResult": {"description": "Describes validation requirements, source(s), status and dates for one or more elements", "type": "object", "properties": {"attestation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/VerificationResult.attestation"}], "description": ""}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "failureAction": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The result if validation fails (fatal; warning; record only; none)."}, "frequency": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": "Frequency of revalidation."}, "id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "lastPerformed": {"type": "string", "description": "The date/time validation was last completed (including failed validations)."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "need": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The frequency with which the target must be validated (none; initial; periodic)."}, "nextScheduled": {"type": "string", "description": "The date when target is next validated, if appropriate."}, "primarySource": {"type": "array", "items": {"$ref": "#/components/schemas/VerificationResult.primarySource"}, "description": ""}, "status": {"type": "string", "description": "attested | validated | in-process | req-revalid | val-fail | reval-fail"}, "statusDate": {"type": "string", "description": "When the validation status was updated."}, "target": {"type": "array", "items": {"$ref": "#/components/schemas/Reference"}, "description": "A resource that was validated."}, "targetLocation": {"type": "string", "description": "The fhirpath location(s) within the resource that was validated."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "validationProcess": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context)"}, "validationType": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "What the target is validated against (nothing; primary source; multiple sources)."}, "validator": {"type": "array", "items": {"$ref": "#/components/schemas/VerificationResult.validator"}, "description": ""}}, "required": ["id", "status"]}, "VerificationResult.attestation": {"description": "", "type": "object", "properties": {"communicationMethod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "The method by which attested information was submitted/retrieved"}, "date": {"type": "string", "description": "The date the information was attested to"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "onBehalfOf": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "When the who is asserting on behalf of another (organization or individual)"}, "proxyIdentityCertificate": {"type": "string", "description": "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source"}, "proxySignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": "Proxy signature"}, "sourceIdentityCertificate": {"type": "string", "description": "A digital identity certificate associated with the attestation source"}, "sourceSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": "Attester signature"}, "who": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The individual or organization attesting to information"}}, "required": ["id"]}, "VerificationResult.primarySource": {"description": "", "type": "object", "properties": {"canPushUpdates": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "yes | no | undetermined"}, "communicationMethod": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Method for exchanging information with the primary source"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "pushTypeAvailable": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "specific | any | source"}, "type": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source)"}, "validationDate": {"type": "string", "description": "When the target was validated against the primary source"}, "validationStatus": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "successful | failed | unknown"}, "who": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Reference to the primary source"}}, "required": ["id"]}, "VerificationResult.validator": {"description": "", "type": "object", "properties": {"attestationSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": "Validator signature"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "identityCertificate": {"type": "string", "description": "A digital identity certificate associated with the validator"}, "organization": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Reference to the organization validating information"}}, "required": ["id", "organization"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Timing": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "BID | TID | QID | AM | PM | QD | QOD | +"}, "event": {"type": "string", "description": "Identifies specific times when the event occurs."}, "id": {"type": "string", "description": ""}, "repeat": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing.repeat"}], "description": ""}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Signature": {"description": "", "type": "object", "properties": {"data": {"type": "string", "description": "The actual signature content (XML DigSig. JWS, picture, etc.)"}, "id": {"type": "string", "description": ""}, "onBehalfOf": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The party represented"}, "sigFormat": {"type": "string", "description": "The technical format of the signature"}, "targetFormat": {"type": "string", "description": "A mime type that indicates the technical format of the target resources signed by the signature."}, "type": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Indication of the reason the entity signed the object(s)"}, "when": {"type": "string", "description": "When the digital signature was signed."}, "who": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Who signed"}}, "required": ["id", "type", "when", "who"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}