{"paths": {"/TestReport": {"post": {"tags": ["TestReport"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TestReport"}, "examples": {"testreport-example.json": {"value": {"resourceType": "TestReport", "id": "testreport-example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: testreport-example</p><p><b>identifier</b>: urn:oid:1.3.6.1.4.1.21367.2005.3.7.9878</p><p><b>name</b>: TestReport Example for TestScript Example</p><p><b>status</b>: completed</p><p><b>testScript</b>: <a>TestScript/testscript-example</a></p><p><b>result</b>: pass</p><p><b>score</b>: 100.0</p><p><b>tester</b>: HL7 Execution Engine</p><p><b>issued</b>: 07/10/2016 8:25:34 AM</p><blockquote><p><b>participant</b></p><p><b>type</b>: test-engine</p><p><b>uri</b>: <a>http://projectcrucible.org</a></p><p><b>display</b>: Crucible</p></blockquote><blockquote><p><b>participant</b></p><p><b>type</b>: server</p><p><b>uri</b>: <a>http://fhir3.healthintersections.com.au/open</a></p><p><b>display</b>: HealthIntersections STU3</p></blockquote><blockquote><p><b>setup</b></p><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Result</b></td><td><b>Message</b></td><td><b>Detail</b></td></tr><tr><td>*</td><td>pass</td><td>DELETE Patient</td><td><a>http://projectcrucible.org/permalink/1</a></td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td><td><b>Result</b></td><td><b>Message</b></td><td><b>Detail</b></td></tr><tr><td>*</td><td>pass</td><td>HTTP 204</td><td>http://projectcrucible.org/permalink/1</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td><td><b>Result</b></td><td><b>Message</b></td><td><b>Detail</b></td></tr><tr><td>*</td><td>pass</td><td>POST Patient/fixture-patient-create</td><td><a>http://projectcrucible.org/permalink/1</a></td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td><td><b>Result</b></td><td><b>Message</b></td><td><b>Detail</b></td></tr><tr><td>*</td><td>pass</td><td>HTTP 201</td><td>http://projectcrucible.org/permalink/1</td></tr></table></blockquote></blockquote><blockquote><p><b>test</b></p><p><b>name</b>: Read Patient</p><p><b>description</b>: Read a Patient and validate response.</p><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote><blockquote><p><b>action</b></p><h3>Asserts</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></blockquote><blockquote><p><b>teardown</b></p><blockquote><p><b>action</b></p><h3>Operations</h3><table><tr><td>-</td></tr><tr><td>*</td></tr></table></blockquote></blockquote></div>"}, "identifier": {"system": "urn:ietf:rfc:3986", "value": "urn:oid:1.3.6.1.4.1.21367.2005.3.7.9878"}, "name": "TestReport Example for TestScript Example", "status": "completed", "testScript": {"reference": "TestScript/testscript-example"}, "result": "pass", "score": 100.0, "tester": "HL7 Execution Engine", "issued": "2016-10-07T08:25:34-05:00", "participant": [{"type": "test-engine", "uri": "http://projectcrucible.org", "display": "Crucible"}, {"type": "server", "uri": "http://fhir3.healthintersections.com.au/open", "display": "HealthIntersections STU3"}], "setup": {"action": [{"operation": {"result": "pass", "message": "DELETE Patient", "detail": "http://projectcrucible.org/permalink/1"}}, {"assert": {"result": "pass", "message": "HTTP 204", "detail": "http://projectcrucible.org/permalink/1"}}, {"operation": {"result": "pass", "message": "POST Patient/fixture-patient-create", "detail": "http://projectcrucible.org/permalink/1"}}, {"assert": {"result": "pass", "message": "HTTP 201", "detail": "http://projectcrucible.org/permalink/1"}}]}, "test": [{"id": "01-ReadPatient", "name": "Read Patient", "description": "Read a Patient and validate response.", "action": [{"operation": {"result": "pass", "message": "GET Patient/fixture-patient-create", "detail": "http://projectcrucible.org/permalink/2"}}, {"assert": {"result": "pass", "message": "HTTP 200", "detail": "http://projectcrucible.org/permalink/2"}}, {"assert": {"result": "pass", "message": "Last-Modified Present", "detail": "http://projectcrucible.org/permalink/2"}}, {"assert": {"result": "pass", "message": "Response is Patient", "detail": "http://projectcrucible.org/permalink/2"}}, {"assert": {"result": "pass", "message": "Response validates", "detail": "http://projectcrucible.org/permalink/2"}}, {"assert": {"result": "pass", "message": "Patient.name.family 'Chalmers'", "detail": "http://projectcrucible.org/permalink/2"}}, {"assert": {"result": "pass", "message": "Patient.name.given 'Peter'", "detail": "http://projectcrucible.org/permalink/2"}}, {"assert": {"result": "pass", "message": "Patient.name.family 'Chalmers'", "detail": "http://projectcrucible.org/permalink/2"}}, {"assert": {"result": "pass", "message": "Patient.name.family 'Chalmers'", "detail": "http://projectcrucible.org/permalink/2"}}, {"assert": {"result": "pass", "message": "Patient expected values.", "detail": "http://projectcrucible.org/permalink/2"}}]}], "teardown": {"action": [{"operation": {"result": "pass", "message": "DELETE Patient/fixture-patient-create.", "detail": "http://projectcrucible.org/permalink/3"}}]}, "meta": {"tag": [{"system": "http://terminology.hl7.org/CodeSystem/v3-ActReason", "code": "HTEST", "display": "test health data"}]}}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["TestReport"], "parameters": [{"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "An external identifier for the test report"}, {"name": "issued", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "The test report generation date"}, {"name": "participant", "in": "query", "schema": {"type": "string"}, "description": "The reference to a participant in the test execution"}, {"name": "result", "in": "query", "schema": {"type": "string"}, "description": "The result disposition of the test execution"}, {"name": "tester", "in": "query", "schema": {"type": "string"}, "description": "The name of the testing organization"}, {"name": "testscript", "in": "query", "schema": {"type": "string"}, "description": "The test script executed to produce this report"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TestReport"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/TestReport/{id}/_history/{vid}": {"get": {"tags": ["TestReport"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TestReport"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/TestReport/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["TestReport"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TestReport"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["TestReport"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/TestReport"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["TestReport"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/TestReport/{id}/_history": {"get": {"tags": ["TestReport"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TestReport"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "Describes the results of a TestScript execution", "title": "FHIR R4 TestReport Resource", "version": "unspecified"}, "tags": [{"name": "TestReport"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"TestReport": {"description": "Describes the results of a TestScript execution", "type": "object", "properties": {"contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Identifier for the TestScript assigned for external purposes outside the context of FHIR."}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "issued": {"type": "string", "description": "When the TestScript was executed and this TestReport was generated."}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "name": {"type": "string", "description": "A free text natural language name identifying the executed TestScript."}, "participant": {"type": "array", "items": {"$ref": "#/components/schemas/TestReport.participant"}, "description": ""}, "result": {"type": "string", "description": "The overall result from the execution of the TestScript."}, "score": {"type": "number", "description": "The final score (percentage of tests passed) resulting from the execution of the TestScript."}, "setup": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TestReport.setup"}], "description": ""}, "status": {"type": "string", "description": "The current state of this test report."}, "teardown": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TestReport.teardown"}], "description": ""}, "test": {"type": "array", "items": {"$ref": "#/components/schemas/TestReport.test"}, "description": ""}, "testScript": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Reference to the  version-specific TestScript that was executed to produce this TestReport"}, "tester": {"type": "string", "description": "Name of the tester producing this report (Organization or individual)."}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}}, "required": ["id", "result", "status", "testScript"]}, "TestReport.participant": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "The display name of the participant"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "type": {"type": "string", "description": "test-engine | client | server"}, "uri": {"type": "string", "description": "The uri of the participant. An absolute URL is preferred"}}, "required": ["id", "type", "uri"]}, "TestReport.setup": {"description": "", "type": "object", "properties": {"action": {"type": "array", "items": {"$ref": "#/components/schemas/TestReport.setup.action"}, "description": "A setup operation or assert that was executed"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}}, "required": ["id", "action"]}, "TestReport.setup.action": {"description": "", "type": "object", "properties": {"assert": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TestReport.setup.action.assert"}], "description": "The assertion to perform"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "operation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TestReport.setup.action.operation"}], "description": "The operation to perform"}}, "required": ["id"]}, "TestReport.setup.action.assert": {"description": "", "type": "object", "properties": {"detail": {"type": "string", "description": "A link to further details on the result"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "message": {"type": "string", "description": "A message associated with the result"}, "result": {"type": "string", "description": "pass | skip | fail | warning | error"}}, "required": ["id", "result"]}, "TestReport.setup.action.operation": {"description": "", "type": "object", "properties": {"detail": {"type": "string", "description": "A link to further details on the result"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "message": {"type": "string", "description": "A message associated with the result"}, "result": {"type": "string", "description": "pass | skip | fail | warning | error"}}, "required": ["id", "result"]}, "TestReport.teardown": {"description": "", "type": "object", "properties": {"action": {"type": "array", "items": {"$ref": "#/components/schemas/TestReport.teardown.action"}, "description": "One or more teardown operations performed"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}}, "required": ["id", "action"]}, "TestReport.teardown.action": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "operation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TestReport.setup.action.operation"}], "description": "The teardown operation performed"}}, "required": ["id", "operation"]}, "TestReport.test": {"description": "", "type": "object", "properties": {"action": {"type": "array", "items": {"$ref": "#/components/schemas/TestReport.test.action"}, "description": "A test operation or assert that was performed"}, "description": {"type": "string", "description": "Tracking/reporting short description of the test"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "name": {"type": "string", "description": "Tracking/logging name of this test"}}, "required": ["id", "action"]}, "TestReport.test.action": {"description": "", "type": "object", "properties": {"assert": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TestReport.setup.action.assert"}], "description": "The assertion performed"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "operation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TestReport.setup.action.operation"}], "description": "The operation performed"}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}