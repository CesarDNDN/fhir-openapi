{"paths": {"/StructureMap": {"post": {"tags": ["StructureMap"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/StructureMap"}, "examples": {"structuremap-example.json": {"value": {"resourceType": "StructureMap", "id": "example", "text": {"status": "generated", "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example</p><p><b>url</b>: <b>http://hl7.org/fhir/StructureMap/example</b></p><p><b>identifier</b>: urn:oid:37843577-95fb-4adb-84c0-8837188a7bf3</p><p><b>version</b>: 0.1</p><p><b>name</b>: ExampleMap</p><p><b>title</b>: Example Map</p><p><b>status</b>: draft</p><p><b>date</b>: 09/03/2017</p><p><b>publisher</b>: HL7 FHIR Standard</p><p><b>contact</b>: </p><p><b>description</b>: Example Structure Map</p><p><b>jurisdiction</b>: Oceania <span>(Details : {http://unstats.un.org/unsd/methods/m49/m49.htm code '009' = 'Oceania', given as 'Oceania'})</span></p><blockquote><p><b>group</b></p><p><b>name</b>: Examples</p><p><b>typeMode</b>: none</p><p><b>documentation</b>: test -&gt; testValue</p><h3>Inputs</h3><table><tr><td>-</td><td><b>Name</b></td><td><b>Mode</b></td></tr><tr><td>*</td><td>test</td><td>source</td></tr></table><blockquote><p><b>rule</b></p><p><b>name</b>: rule1</p><h3>Sources</h3><table><tr><td>-</td><td><b>Context</b></td><td><b>Type</b></td><td><b>Element</b></td><td><b>Variable</b></td></tr><tr><td>*</td><td>Source</td><td>SourceClassA</td><td>test</td><td>t</td></tr></table><h3>Targets</h3><table><tr><td>-</td><td><b>Context</b></td><td><b>ContextType</b></td><td><b>Element</b></td><td><b>Transform</b></td></tr><tr><td>*</td><td>Destination</td><td>variable</td><td>testValue</td><td>copy</td></tr></table></blockquote></blockquote></div>"}, "url": "http://hl7.org/fhir/StructureMap/example", "identifier": [{"system": "urn:ietf:rfc:3986", "value": "urn:oid:37843577-95fb-4adb-84c0-8837188a7bf3"}], "version": "0.1", "name": "ExampleMap", "title": "Example Map", "status": "draft", "date": "2017-03-09", "publisher": "HL7 FHIR Standard", "contact": [{"telecom": [{"system": "url", "value": "http://hl7.org/fhir"}]}], "description": "Example Structure Map", "jurisdiction": [{"coding": [{"system": "http://unstats.un.org/unsd/methods/m49/m49.htm", "code": "009", "display": "Oceania"}]}], "group": [{"name": "Examples", "typeMode": "none", "documentation": "test -> testValue", "input": [{"name": "test", "mode": "source"}], "rule": [{"name": "rule1", "source": [{"context": "Source", "type": "SourceClassA", "element": "test", "variable": "t"}], "target": [{"context": "Destination", "contextType": "variable", "element": "testValue", "transform": "copy"}]}]}]}}}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "get": {"tags": ["StructureMap"], "parameters": [{"name": "context", "in": "query", "schema": {"type": "string"}, "description": "A use context assigned to the structure map"}, {"name": "context-quantity", "in": "query", "schema": {"type": "integer"}, "description": "A quantity- or range-valued use context assigned to the structure map"}, {"name": "context-type", "in": "query", "schema": {"type": "string"}, "description": "A type of use context assigned to the structure map"}, {"name": "date", "in": "query", "schema": {"type": "string", "format": "date"}, "description": "The structure map publication date"}, {"name": "description", "in": "query", "schema": {"type": "string"}, "description": "The description of the structure map"}, {"name": "identifier", "in": "query", "schema": {"type": "string"}, "description": "External identifier for the structure map"}, {"name": "jurisdiction", "in": "query", "schema": {"type": "string"}, "description": "Intended jurisdiction for the structure map"}, {"name": "name", "in": "query", "schema": {"type": "string"}, "description": "Computationally friendly name of the structure map"}, {"name": "publisher", "in": "query", "schema": {"type": "string"}, "description": "Name of the publisher of the structure map"}, {"name": "status", "in": "query", "schema": {"type": "string"}, "description": "The current status of the structure map"}, {"name": "title", "in": "query", "schema": {"type": "string"}, "description": "The human-friendly name of the structure map"}, {"name": "url", "in": "query", "schema": {"type": "string"}, "description": "The uri that identifies the structure map"}, {"name": "version", "in": "query", "schema": {"type": "string"}, "description": "The business version of the structure map"}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/StructureMap"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/StructureMap/{id}": {"parameters": [{"in": "path", "required": true, "name": "id", "schema": {"type": "string"}}], "get": {"tags": ["StructureMap"], "parameters": [], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/StructureMap"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "put": {"tags": ["StructureMap"], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "requestBody": {"content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/StructureMap"}}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}, "delete": {"tags": ["StructureMap"], "parameters": [], "responses": {"200": {"description": "Success", "content": {}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/StructureMap/{id}/_history/{vid}": {"get": {"tags": ["StructureMap"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "vid", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"$ref": "#/components/schemas/StructureMap"}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}, "/StructureMap/{id}/_history": {"get": {"tags": ["StructureMap"], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "_count", "in": "query", "schema": {"type": "string"}}, {"name": "_since", "in": "query", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/fhir+json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap"}}}}}, "400": {"description": "Invalid"}, "404": {"description": "Not-Found"}, "406": {"description": "Not-Supported"}, "503": {"description": "Operation"}, "401": {"description": "Unauthorized"}, "403": {"description": "Forbidden"}, "415": {"description": "Unsupported-Type"}, "500": {"description": "Internal-Error"}, "502": {"description": "Bad-Gateway"}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}}}, "info": {"description": "A Map of relationships between 2 structures that can be used to transform data", "title": "FHIR R4 StructureMap Resource", "version": "unspecified"}, "tags": [{"name": "StructureMap"}], "openapi": "3.0.1", "servers": [{"url": "http://localhost:52774/csp/healthshare/fhirtest/fhir/r4"}], "components": {"schemas": {"StructureMap": {"description": "A Map of relationships between 2 structures that can be used to transform data", "type": "object", "properties": {"contact": {"type": "array", "items": {"$ref": "#/components/schemas/ContactDetail"}, "description": "Contact details to assist a user in finding and communicating with the publisher."}, "contained": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}, "description": "Contained, inline Resources"}, "copyright": {"type": "string", "description": "Use and/or publishing restrictions"}, "date": {"type": "string", "description": "Date last changed"}, "description": {"type": "string", "description": "A free text natural language description of the structure map from a consumer's perspective."}, "experimental": {"type": "boolean", "description": "For testing purposes, not real usage"}, "group": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap.group"}, "description": ""}, "id": {"type": "string", "description": "Logical id of this artifact"}, "identifier": {"type": "array", "items": {"$ref": "#/components/schemas/Identifier"}, "description": "Additional identifier for the structure map"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "import": {"type": "string", "description": "Other maps used by this map (canonical URLs)."}, "jurisdiction": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "A legal or geographic region in which the structure map is intended to be used."}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}, "name": {"type": "string", "description": "Name for this structure map (computer friendly)"}, "publisher": {"type": "string", "description": "The name of the organization or individual that published the structure map."}, "purpose": {"type": "string", "description": "Explanation of why this structure map is needed and why it has been designed as it has."}, "status": {"type": "string", "description": "The status of this structure map. Enables tracking the life-cycle of the content."}, "structure": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap.structure"}, "description": ""}, "text": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Narrative"}], "description": "Text summary of the resource, for human interpretation"}, "title": {"type": "string", "description": "A short, descriptive, user-friendly title for the structure map."}, "url": {"type": "string", "description": "Canonical identifier for this structure map, represented as a URI (globally unique)"}, "useContext": {"type": "array", "items": {"$ref": "#/components/schemas/UsageContext"}, "description": "The context that the content is intended to support"}, "version": {"type": "string", "description": "Business version of the structure map"}}, "required": ["id", "group", "name", "status", "url"]}, "StructureMap.group": {"description": "", "type": "object", "properties": {"documentation": {"type": "string", "description": "Additional description/explanation for group"}, "extends": {"type": "string", "description": "Another group that this group adds rules to"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "input": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap.group.input"}, "description": "Named instance provided when invoking the map"}, "name": {"type": "string", "description": "Human-readable label"}, "rule": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap.group.rule"}, "description": "Transform Rule from source to target"}, "typeMode": {"type": "string", "description": "none | types | type-and-types"}}, "required": ["id", "input", "name", "rule", "typeMode"]}, "StructureMap.group.input": {"description": "", "type": "object", "properties": {"documentation": {"type": "string", "description": "Documentation for this instance of data"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "mode": {"type": "string", "description": "source | target"}, "name": {"type": "string", "description": "Name for this instance of data"}, "type": {"type": "string", "description": "Type for this instance of data"}}, "required": ["id", "mode", "name"]}, "StructureMap.group.rule": {"description": "", "type": "object", "properties": {"dependent": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap.group.rule.dependent"}, "description": "Which other rules to apply in the context of this rule"}, "documentation": {"type": "string", "description": "Documentation for this instance of data"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "name": {"type": "string", "description": "Name of the rule for internal references"}, "rule": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap.group.rule"}, "description": "Rules contained in this rule"}, "source": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap.group.rule.source"}, "description": "Source inputs to the mapping"}, "target": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap.group.rule.target"}, "description": "Content to create because of this mapping rule"}}, "required": ["id", "name", "source"]}, "StructureMap.group.rule.dependent": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "name": {"type": "string", "description": "Name of a rule or group to apply"}, "variable": {"type": "string", "description": "Variable to pass to the rule or group"}}, "required": ["id", "name", "variable"]}, "StructureMap.group.rule.source": {"description": "", "type": "object", "properties": {"check": {"type": "string", "description": "FHIRPath expression  - must be true or the mapping engine throws an error instead of completing"}, "condition": {"type": "string", "description": "FHIRPath expression  - must be true or the rule does not apply"}, "context": {"type": "string", "description": "Type or variable this rule applies to"}, "defaultValue[x]": {"type": "string", "description": "Default value if no value exists"}, "defaultValueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueBase64Binary": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueBoolean": {"type": "boolean", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueCanonical": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueCode": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueDate": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueDateTime": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueDecimal": {"type": "number", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueId": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueInstant": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueInteger": {"type": "number", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueMarkdown": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueOid": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValuePositiveInt": {"type": "number", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueTime": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueUnsignedInt": {"type": "number", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueUri": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueUrl": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "defaultValueUuid": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "element": {"type": "string", "description": "Optional field for this source"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "listMode": {"type": "string", "description": "first | not_first | last | not_last | only_one"}, "logMessage": {"type": "string", "description": "Message to put in log if source exists (FHIRPath)"}, "max": {"type": "string", "description": "Specified maximum cardinality (number or *)"}, "min": {"type": "number", "description": "Specified minimum cardinality"}, "type": {"type": "string", "description": "Rule only applies if source has this type"}, "variable": {"type": "string", "description": "Named context for field, if a field is specified"}}, "required": ["id", "context"]}, "StructureMap.group.rule.target": {"description": "", "type": "object", "properties": {"context": {"type": "string", "description": "Type or variable this rule applies to"}, "contextType": {"type": "string", "description": "type | variable"}, "element": {"type": "string", "description": "Field to create in the context"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "listMode": {"type": "string", "description": "first | share | last | collate"}, "listRuleId": {"type": "string", "description": "Internal rule reference for shared list items"}, "parameter": {"type": "array", "items": {"$ref": "#/components/schemas/StructureMap.group.rule.target.parameter"}, "description": "Parameters to the transform"}, "transform": {"type": "string", "description": "create | copy +"}, "variable": {"type": "string", "description": "Named context for field, if desired, and a field is specified"}}, "required": ["id"]}, "StructureMap.group.rule.target.parameter": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": "Unique id for inter-element referencing"}, "value[x]": {"type": "string", "description": "Parameter value - variable or literal"}, "valueBoolean": {"type": "boolean", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "valueDecimal": {"type": "number", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "valueId": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "valueInteger": {"type": "number", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}, "valueString": {"type": "string", "description": "UNABLE TO FIND RESOURCE/ELEMENT NAME"}}, "required": ["id", "value"]}, "StructureMap.structure": {"description": "", "type": "object", "properties": {"alias": {"type": "string", "description": "Name for type in this map"}, "documentation": {"type": "string", "description": "Documentation on use of structure"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "mode": {"type": "string", "description": "source | queried | target | produced"}, "url": {"type": "string", "description": "Canonical reference to structure definition"}}, "required": ["id", "mode", "url"]}, "ContactDetail": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "name": {"type": "string", "description": "The name of an individual to contact."}, "telecom": {"type": "array", "items": {"$ref": "#/components/schemas/ContactPoint"}, "description": "The contact details for the individual (if a name was provided) or the organization."}}, "required": ["id"]}, "Resource": {"description": "Base Resource", "type": "object", "properties": {"id": {"type": "string", "description": "Logical id of this artifact"}, "implicitRules": {"type": "string", "description": "A set of rules under which this content was created"}, "language": {"type": "string", "description": "The base language in which the resource is written."}, "meta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": "Metadata about the resource"}}, "required": ["id"]}, "Extension": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "url": {"type": "string", "description": "Source of the definition for the extension code - a logical name or a URL."}, "value[x]": {"type": "string", "description": "Value of extension"}, "valueAddress": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Address"}], "description": ""}, "valueAge": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Age"}], "description": ""}, "valueAnnotation": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Annotation"}], "description": ""}, "valueAttachment": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": ""}, "valueBase64Binary": {"type": "string", "description": ""}, "valueBoolean": {"type": "boolean", "description": ""}, "valueCanonical": {"type": "string", "description": ""}, "valueCode": {"type": "string", "description": ""}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueCoding": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": ""}, "valueContactDetail": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactDetail"}], "description": ""}, "valueContactPoint": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ContactPoint"}], "description": ""}, "valueContributor": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Contributor"}], "description": ""}, "valueCount": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Count"}], "description": ""}, "valueDataRequirement": {"type": "object", "allOf": [{"$ref": "#/components/schemas/DataRequirement"}], "description": ""}, "valueDate": {"type": "string", "description": ""}, "valueDateTime": {"type": "string", "description": ""}, "valueDecimal": {"type": "number", "description": ""}, "valueDistance": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Distance"}], "description": ""}, "valueDosage": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Dosage"}], "description": ""}, "valueDuration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Duration"}], "description": ""}, "valueExpression": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": ""}, "valueHumanName": {"type": "object", "allOf": [{"$ref": "#/components/schemas/HumanName"}], "description": ""}, "valueId": {"type": "string", "description": ""}, "valueIdentifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": ""}, "valueInstant": {"type": "string", "description": ""}, "valueInteger": {"type": "number", "description": ""}, "valueMarkdown": {"type": "string", "description": ""}, "valueMeta": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Meta"}], "description": ""}, "valueMoney": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Money"}], "description": ""}, "valueOid": {"type": "string", "description": ""}, "valueParameterDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/ParameterDefinition"}], "description": ""}, "valuePeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": ""}, "valuePositiveInt": {"type": "number", "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueRatio": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "valueRelatedArtifact": {"type": "object", "allOf": [{"$ref": "#/components/schemas/RelatedArtifact"}], "description": ""}, "valueSampledData": {"type": "object", "allOf": [{"$ref": "#/components/schemas/SampledData"}], "description": ""}, "valueSignature": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Signature"}], "description": ""}, "valueString": {"type": "string", "description": ""}, "valueTime": {"type": "string", "description": ""}, "valueTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "valueTriggerDefinition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/TriggerDefinition"}], "description": ""}, "valueUnsignedInt": {"type": "number", "description": ""}, "valueUri": {"type": "string", "description": ""}, "valueUrl": {"type": "string", "description": ""}, "valueUsageContext": {"type": "object", "allOf": [{"$ref": "#/components/schemas/UsageContext"}], "description": ""}, "valueUuid": {"type": "string", "description": ""}}, "required": ["id", "url"]}, "Identifier": {"description": "", "type": "object", "properties": {"assigner": {"type": "string", "description": "Organization that issued/manages the identifier."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period during which identifier is/was valid for use."}, "system": {"type": "string", "description": "The namespace for the identifier value"}, "type": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Description of identifier"}, "use": {"type": "string", "description": "The purpose of this identifier."}, "value": {"type": "string", "description": "The value that is unique"}}, "required": ["id"]}, "CodeableConcept": {"description": "", "type": "object", "properties": {"coding": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "A reference to a code defined by a terminology system."}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "Plain text representation of the concept"}}, "required": ["id"]}, "Meta": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "lastUpdated": {"type": "string", "description": "When the resource last changed - e.g. when the version changed."}, "profile": {"type": "string", "description": "Profiles this resource claims to conform to"}, "security": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Security Labels applied to this resource"}, "source": {"type": "string", "description": "Identifies where the resource comes from"}, "tag": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Tags applied to this resource"}, "versionId": {"type": "string", "description": "Version specific identifier"}}, "required": ["id"]}, "Narrative": {"description": "", "type": "object", "properties": {"div": {"description": "The actual narrative content, a stripped down version of XHTML."}, "id": {"type": "string", "description": ""}, "status": {"type": "string", "description": "generated | extensions | additional | empty"}}, "required": ["id", "div", "status"]}, "UsageContext": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Coding"}], "description": "A code that identifies the type of context being specified by this usage context."}, "id": {"type": "string", "description": ""}, "value[x]": {"type": "string", "description": "Value that defines the context"}, "valueCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "valueQuantity": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": ""}, "valueRange": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Range"}], "description": ""}, "valueReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}}, "required": ["id", "code", "value"]}, "Coding": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "Symbol in syntax defined by the system"}, "display": {"type": "string", "description": "A representation of the meaning of the code in the system, following the rules of the system."}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": "The identification of the code system that defines the meaning of the symbol in the code."}, "userSelected": {"type": "boolean", "description": "If this coding was chosen directly by the user"}, "version": {"type": "string", "description": "Version of the system - if relevant"}}, "required": ["id"]}, "Period": {"description": "", "type": "object", "properties": {"end": {"type": "string", "description": "End time with inclusive boundary, if not ongoing"}, "id": {"type": "string", "description": ""}, "start": {"type": "string", "description": "The start of the period. The boundary is inclusive."}}, "required": ["id"]}, "Address": {"description": "", "type": "object", "properties": {"city": {"type": "string", "description": "The name of the city, town, suburb, village or other community or delivery center."}, "country": {"type": "string", "description": "Country - a nation as commonly understood or generally accepted."}, "district": {"type": "string", "description": "The name of the administrative area (county)."}, "id": {"type": "string", "description": ""}, "line": {"type": "string", "description": "Street name, number, direction & P.O. Box etc."}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period when address was/is in use."}, "postalCode": {"type": "string", "description": "A postal code designating a region defined by the postal service."}, "state": {"type": "string", "description": "Sub-unit of country (abbreviations ok)"}, "text": {"type": "string", "description": "Text representation of the address"}, "type": {"type": "string", "description": "postal | physical | both"}, "use": {"type": "string", "description": "The purpose of this address."}}, "required": ["id"]}, "Age": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": ""}, "comparator": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": ""}, "unit": {"type": "string", "description": ""}, "value": {"type": "number", "description": ""}}, "required": ["id"]}, "Annotation": {"description": "", "type": "object", "properties": {"author[x]": {"type": "string", "description": "The individual responsible for making the annotation."}, "authorReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "authorString": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "text": {"type": "string", "description": "The text of the annotation in markdown format."}, "time": {"type": "string", "description": "Indicates when this particular annotation was made."}}, "required": ["id", "text"]}, "Attachment": {"description": "", "type": "object", "properties": {"contentType": {"type": "string", "description": "Mime type of the content, with charset etc."}, "creation": {"type": "string", "description": "The date that the attachment was first created."}, "data": {"type": "string", "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."}, "hash": {"type": "string", "description": "The calculated hash of the data using SHA-1. Represented using base64."}, "id": {"type": "string", "description": ""}, "language": {"type": "string", "description": "The human language of the content. The value can be any valid value according to BCP 47."}, "size": {"type": "number", "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."}, "title": {"type": "string", "description": "A label or set of text to display in place of the data."}, "url": {"type": "string", "description": "A location where the data can be accessed."}}, "required": ["id"]}, "ContactPoint": {"description": "", "type": "object", "properties": {"id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Time period when the contact point was/is in use."}, "rank": {"type": "number", "description": "Specify preferred order of use (1 = highest)"}, "system": {"type": "string", "description": "phone | fax | email | pager | url | sms | other"}, "use": {"type": "string", "description": "Identifies the purpose for the contact point."}, "value": {"type": "string", "description": "The actual contact point details"}}, "required": ["id"]}, "Contributor": {"description": "", "type": "object", "properties": {"contact": {"type": "array", "items": {"$ref": "#/components/schemas/ContactDetail"}, "description": "Contact details to assist a user in finding and communicating with the contributor."}, "id": {"type": "string", "description": ""}, "name": {"type": "string", "description": "The name of the individual or organization responsible for the contribution."}, "type": {"type": "string", "description": "The type of contributor."}}, "required": ["id", "name", "type"]}, "Count": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": ""}, "comparator": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": ""}, "unit": {"type": "string", "description": ""}, "value": {"type": "number", "description": ""}}, "required": ["id"]}, "DataRequirement": {"description": "", "type": "object", "properties": {"codeFilter": {"type": "array", "items": {"$ref": "#/components/schemas/DataRequirement.codeFilter"}, "description": ""}, "dateFilter": {"type": "array", "items": {"$ref": "#/components/schemas/DataRequirement.dateFilter"}, "description": ""}, "id": {"type": "string", "description": ""}, "limit": {"type": "number", "description": "Specifies a maximum number of results that are required (uses the _count search parameter)."}, "mustSupport": {"type": "string", "description": "Indicates specific structure elements that are referenced by the knowledge module"}, "profile": {"type": "string", "description": "The profile of the required data, specified as the uri of the profile definition."}, "sort": {"type": "array", "items": {"$ref": "#/components/schemas/DataRequirement.sort"}, "description": ""}, "subject[x]": {"type": "string", "description": "E.g. Patient, Practitioner, RelatedPerson, Organization, Location, Device"}, "subjectCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "subjectReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "type": {"type": "string", "description": "The type of the required data"}}, "required": ["id", "type"]}, "Distance": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": ""}, "comparator": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": ""}, "unit": {"type": "string", "description": ""}, "value": {"type": "number", "description": ""}}, "required": ["id"]}, "Dosage": {"description": "", "type": "object", "properties": {"additionalInstruction": {"type": "array", "items": {"$ref": "#/components/schemas/CodeableConcept"}, "description": "Supplemental instruction or warnings to the patient - e.g. \"with meals\", \"may cause drowsiness\""}, "asNeeded[x]": {"type": "string", "description": "Take \"as needed\" (for x)"}, "asNeededBoolean": {"type": "boolean", "description": ""}, "asNeededCodeableConcept": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": ""}, "doseAndRate": {"type": "array", "items": {"$ref": "#/components/schemas/Dosage.doseAndRate"}, "description": ""}, "id": {"type": "string", "description": ""}, "maxDosePerAdministration": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "Upper limit on medication per administration."}, "maxDosePerLifetime": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "Upper limit on medication per lifetime of the patient."}, "maxDosePerPeriod": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Ratio"}], "description": "Upper limit on medication per unit of time."}, "method": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Technique for administering medication."}, "patientInstruction": {"type": "string", "description": "Instructions in terms that are understood by the patient or consumer."}, "route": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "How drug should enter body."}, "sequence": {"type": "number", "description": "Indicates the order in which the dosage instructions should be applied or interpreted."}, "site": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "Body site to administer to."}, "text": {"type": "string", "description": "Free text dosage instructions e.g. SIG."}, "timing": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": "When medication should be administered."}}, "required": ["id"]}, "Duration": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": ""}, "comparator": {"type": "string", "description": ""}, "id": {"type": "string", "description": ""}, "system": {"type": "string", "description": ""}, "unit": {"type": "string", "description": ""}, "value": {"type": "number", "description": ""}}, "required": ["id"]}, "Expression": {"description": "", "type": "object", "properties": {"description": {"type": "string", "description": "Natural language description of the condition"}, "expression": {"type": "string", "description": "An expression in the specified language that returns a value."}, "id": {"type": "string", "description": ""}, "language": {"type": "string", "description": "The media type of the language for the expression."}, "name": {"type": "string", "description": "Short name assigned to expression for reuse"}, "reference": {"type": "string", "description": "A URI that defines where the expression is found."}}, "required": ["id", "language"]}, "HumanName": {"description": "", "type": "object", "properties": {"family": {"type": "string", "description": "Family name (often called 'Surname')"}, "given": {"type": "string", "description": "Given name."}, "id": {"type": "string", "description": ""}, "period": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Period"}], "description": "Indicates the period of time when this name was valid for the named person."}, "prefix": {"type": "string", "description": "Parts that come before the name"}, "suffix": {"type": "string", "description": "Parts that come after the name"}, "text": {"type": "string", "description": "Text representation of the full name"}, "use": {"type": "string", "description": "Identifies the purpose for this name."}}, "required": ["id"]}, "Money": {"description": "", "type": "object", "properties": {"currency": {"type": "string", "description": "ISO 4217 Currency Code."}, "id": {"type": "string", "description": ""}, "value": {"type": "number", "description": "Numerical value (with implicit precision)."}}, "required": ["id"]}, "ParameterDefinition": {"description": "", "type": "object", "properties": {"documentation": {"type": "string", "description": "A brief discussion of what the parameter is for and how it is used by the module."}, "id": {"type": "string", "description": ""}, "max": {"type": "string", "description": "The maximum number of times this element is permitted to appear in the request or response."}, "min": {"type": "number", "description": "The minimum number of times this parameter SHALL appear in the request or response."}, "name": {"type": "string", "description": "Name used to access the parameter value"}, "profile": {"type": "string", "description": "What profile the value is expected to be"}, "type": {"type": "string", "description": "The type of the parameter."}, "use": {"type": "string", "description": "Whether the parameter is input or output for the module."}}, "required": ["id", "type", "use"]}, "Quantity": {"description": "", "type": "object", "properties": {"code": {"type": "string", "description": "A computer processable form of the unit in some unit representation system."}, "comparator": {"type": "string", "description": "< | <= | >= | > - how to understand the value"}, "id": {"type": "string", "description": "Unique id for inter-element referencing"}, "system": {"type": "string", "description": "The identification of the system that provides the coded form of the unit."}, "unit": {"type": "string", "description": "A human-readable form of the unit."}, "value": {"type": "number", "description": "Numerical value (with implicit precision)"}}, "required": ["id"]}, "Range": {"description": "", "type": "object", "properties": {"high": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The high limit. The boundary is inclusive."}, "id": {"type": "string", "description": ""}, "low": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The low limit. The boundary is inclusive."}}, "required": ["id"]}, "Ratio": {"description": "", "type": "object", "properties": {"denominator": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The value of the denominator."}, "id": {"type": "string", "description": ""}, "numerator": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "The value of the numerator."}}, "required": ["id"]}, "Reference": {"description": "", "type": "object", "properties": {"display": {"type": "string", "description": "Plain text narrative that identifies the resource in addition to the resource reference."}, "id": {"type": "string", "description": ""}, "identifier": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Identifier"}], "description": "Logical reference, when literal reference is not known"}, "reference": {"type": "string", "description": "Literal reference, Relative, internal or absolute URL"}, "type": {"type": "string", "description": "Type the reference refers to (e.g. \"Patient\")"}}, "required": ["id"]}, "RelatedArtifact": {"description": "", "type": "object", "properties": {"citation": {"type": "string", "description": "Bibliographic citation for the artifact"}, "display": {"type": "string", "description": "Brief description of the related artifact"}, "document": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Attachment"}], "description": "What document is being referenced"}, "id": {"type": "string", "description": ""}, "label": {"type": "string", "description": "Short label"}, "resource": {"type": "string", "description": "The related resource, such as a library, value set, profile, or other knowledge resource."}, "type": {"type": "string", "description": "The type of relationship to the related artifact."}, "url": {"type": "string", "description": "A url for the artifact that can be followed to access the actual content."}}, "required": ["id", "type"]}, "SampledData": {"description": "", "type": "object", "properties": {"data": {"type": "string", "description": "Decimal values with spaces, or \"E\" | \"U\" | \"L\""}, "dimensions": {"type": "number", "description": "Number of sample points at each time point"}, "factor": {"type": "number", "description": "A correction factor that is applied to the sampled data points before they are added to the origin."}, "id": {"type": "string", "description": ""}, "lowerLimit": {"type": "number", "description": "Lower limit of detection"}, "origin": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Quantity"}], "description": "Zero value and units"}, "period": {"type": "number", "description": "The length of time between sampling times, measured in milliseconds."}, "upperLimit": {"type": "number", "description": "Upper limit of detection"}}, "required": ["id", "dimensions", "origin", "period"]}, "Signature": {"description": "", "type": "object", "properties": {"data": {"type": "string", "description": "The actual signature content (XML DigSig. JWS, picture, etc.)"}, "id": {"type": "string", "description": ""}, "onBehalfOf": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "The party represented"}, "sigFormat": {"type": "string", "description": "The technical format of the signature"}, "targetFormat": {"type": "string", "description": "A mime type that indicates the technical format of the target resources signed by the signature."}, "type": {"type": "array", "items": {"$ref": "#/components/schemas/Coding"}, "description": "Indication of the reason the entity signed the object(s)"}, "when": {"type": "string", "description": "When the digital signature was signed."}, "who": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": "Who signed"}}, "required": ["id", "type", "when", "who"]}, "Timing": {"description": "", "type": "object", "properties": {"code": {"type": "object", "allOf": [{"$ref": "#/components/schemas/CodeableConcept"}], "description": "BID | TID | QID | AM | PM | QD | QOD | +"}, "event": {"type": "string", "description": "Identifies specific times when the event occurs."}, "id": {"type": "string", "description": ""}, "repeat": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing.repeat"}], "description": ""}}, "required": ["id"]}, "TriggerDefinition": {"description": "", "type": "object", "properties": {"condition": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Expression"}], "description": "Whether the event triggers (boolean expression)"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataRequirement"}, "description": "Triggering data of the event (multiple = 'and')"}, "id": {"type": "string", "description": ""}, "name": {"type": "string", "description": "Name or URI that identifies the event"}, "timing[x]": {"type": "string", "description": "The timing of the event (if this is a periodic trigger)."}, "timingDate": {"type": "string", "description": ""}, "timingDateTime": {"type": "string", "description": ""}, "timingReference": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Reference"}], "description": ""}, "timingTiming": {"type": "object", "allOf": [{"$ref": "#/components/schemas/Timing"}], "description": ""}, "type": {"type": "string", "description": "The type of triggering event."}}, "required": ["id", "type"]}}, "securitySchemes": {"ApiKeyAuth": {"type": "apiKey", "in": "header", "name": "X-API-Key"}}}, "security": [{"ApiKeyAuth": ["user/*.write", "user/*.*"]}]}