version: "3.7"

# networks:
#   kong-net:
#     name: kong-net
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.1.1.0/24

services:
  iris:
    image:  intersystems/iriswpython:1.2.0
    ports: ["51775:51773", "1975:1972", "52775:52773", "443:443"]
    volumes: ["./data:/data"]
    environment: [ISC_DATA_DIRECTORY=/data/ifconfig]
    entrypoint: ["/iris-main"]
    # networks:
    #   kong-net:
    #     ipv4_address: 172.1.1.41
#   iam-migrations:
#     image: ${ISC_IAM_IMAGE} 
#     command: "kong migrations bootstrap"
#     # networks:
#     #   - kong-net
#     depends_on:
#       - db
#     environment:
#       KONG_DATABASE: postgres
#       KONG_PG_DATABASE: ${KONG_PG_DATABASE:-iam}
#       KONG_PG_HOST: db
#       KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-iam}
#       KONG_PG_USER: ${KONG_PG_USER:-iam}
#       KONG_CASSANDRA_CONTACT_POINTS: db
#       ISC_IRIS_URL: $ISC_IRIS_URL
#     volumes: ["./kong:/konglicense/"]
#     # command: "curl http://IAM:fhir@iris:52773/api/iam/license"
#     restart: on-failure
#     links:
#       - db:db

#   iam:
#     image: ${ISC_IAM_IMAGE}
#     depends_on:
#       - iris
#       - iam-migrations
#       - db
#     # networks:
#     #   kong-net:
#     #     ipv4_address: 172.1.1.40
#     environment:
#       KONG_ADMIN_ACCESS_LOG: /dev/stdout
#       KONG_ADMIN_ERROR_LOG: /dev/stderr
#       KONG_ADMIN_LISTEN: "0.0.0.0:8001"
#       KONG_ANONYMOUS_REPORTS: "off"
#       KONG_VITALS: "on"
#       KONG_CASSANDRA_CONTACT_POINTS: db
#       KONG_DATABASE: postgres
#       KONG_PG_DATABASE: ${KONG_PG_DATABASE:-iam}
#       KONG_PG_HOST: db
#       KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-iam}
#       KONG_PG_USER: ${KONG_PG_USER:-iam}
#       KONG_PROXY_ACCESS_LOG: /dev/stdout
#       KONG_PROXY_ERROR_LOG: /dev/stderr
#       KONG_PORTAL: "on"
#       KONG_PORTAL_GUI_PROTOCOL: http
#       KONG_PORTAL_GUI_HOST: "127.0.0.1:8003"
#       ISC_IRIS_URL: $ISC_IRIS_URL
#       ISC_IAM_IMAGE: ${ISC_IAM_IMAGE}
#     links:
#       - db:db
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://kong:8001"]
#       interval: 30s
#       timeout: 3s
#       retries: 10
#     volumes: ["./kong:/konglicense/","./data:/irisdata"]
#     ports:
#       [
#         "8000:8000",
#         "8001:8001",
#         "8002:8002",
#         "8003:8003",
#         "8004:8004",
#         "8443:8443",
#         "8444:8444",
#         "8445:8445",
#       ]
#     # command: "curl http://IAM:fhir@iris:52773/api/iam/license"
#     command: ["bash","/irisdata/waiter/wait-for-it.sh","IAM:fhir@iris:52773","--","echo","iris","running"]
#     restart: on-failure

#   db:
#     image: postgres:9.6
#     # networks:
#     #   - kong-net
#     environment:
#       POSTGRES_DB: ${KONG_PG_DATABASE:-iam}
#       POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-iam}
#       POSTGRES_USER: ${KONG_PG_USER:-iam}
#     ports:
#       - "5432:5432"
#     volumes:
#       - "pgdata:/var/lib/postgresql/data"
#     healthcheck:
#       test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-iam}"]
#       interval: 30s
#       timeout: 30s
#       retries: 3
#     restart: on-failure
#     stdin_open: true
#     tty: true
# #   #######################################
# #   # Prometheus
# #   ######################################
# #   pr:
# #     container_name: prometheus
# #     image: prom/prometheus
# #     restart: always
# #     depends_on:
# #       - iris
# #       - iam
# #     networks:
# #       kong-net:
# #         ipv4_address: 172.1.1.42
# #     ports:
# #       - "9090:9090"
# #     volumes:
# #       - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
# #   #########################################
# #   # Grafana
# #   #########################################
# #   gf:
# #     container_name: grafana
# #     image: grafana/grafana
# #     depends_on:
# #       - iris
# #       - iam
# #     restart: always
# #     networks:
# #       kong-net:
# #         ipv4_address: 172.1.1.43
# #     ports:
# #       - "3000:3000"
# # ##########################################################
# volumes:
#   pgdata:
